app = "bitredict-backend"
primary_region = "fra"

[build]
  dockerfile = "Dockerfile"

[env]
  NODE_ENV = "production"
  PORT = "3000"

# Main HTTP service for the API only
[http_service]
  internal_port = 3000
  force_https = true
  auto_stop_machines = true
  auto_start_machines = true
  min_machines_running = 1  # Keep at least 1 API server running
  processes = ["app"]

  [[http_service.ports]]
    port = 80
    handlers = ["http"]
    force_https = true

  [[http_service.ports]]
    port = 443
    handlers = ["tls", "http"]

[http_service.concurrency]
  type = "connections"
  hard_limit = 25
  soft_limit = 20

# Health checks for the main API
[[http_service.http_checks]]
  grace_period = "30s"
  interval = "15s"
  method = "get"
  path = "/health"
  protocol = "http"
  restart_limit = 3
  timeout = "5s"

# Process definitions
[processes]
  app = "node api/server.js"
  indexer = "npm run indexer"
  workers = "node cron/consolidated-workers.js"

# Main API server VM - ONLY API, no background services
[[vm]]
  processes = ["app"]
  cpu_kind = "shared"
  cpus = 2
  memory_mb = 2048  # Increased memory for better stability
  region = "fra"
  # Prevent auto-stopping for API server
  auto_stop_machines = false
  min_machines_running = 1

# Indexer VM (blockchain event indexers)
[[vm]]
  processes = ["indexer"]
  cpu_kind = "shared"
  cpus = 1
  memory_mb = 768
  region = "fra"
  # Disable auto-stopping for indexers to prevent frequent restarts
  auto_stop_machines = false
  min_machines_running = 1

# Workers VM (consolidated background workers with all cron jobs)
[[vm]]
  processes = ["workers"]
  cpu_kind = "shared"
  cpus = 2
  memory_mb = 1024
  region = "fra"
  # Disable auto-stopping for workers to prevent frequent restarts
  auto_stop_machines = false
  min_machines_running = 1