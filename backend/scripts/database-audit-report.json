{
  "timestamp": "2025-08-28T00:48:22.583Z",
  "summary": {
    "errors": 477,
    "warnings": 24,
    "filesScanned": 156,
    "tablesInSchema": 60
  },
  "issues": [
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 42,
      "message": "Table 'airdrop.faucet_claims' does not exist in database",
      "query": "SELECT * FROM airdrop.faucet_claims WHERE LOWER(user_address...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 42,
      "message": "Table 'airdrop.snapshots' does not exist in database",
      "query": "SELECT * FROM airdrop.snapshots \n      ORDER BY created_at DESC \n      LIMIT 1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 291,
      "message": "Table 'airdrop.snapshots' does not exist in database",
      "query": "SELECT id FROM airdrop.snapshots WHERE snapshot_name = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.eligibility' does not exist in database",
      "query": "SELECT \n        user_address,\n        snapshot_bitr_balance,\n        airdrop_amount,\n        bitr_ac...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'prediction.bets' does not exist in database",
      "query": "SELECT \n        e.*,\n        fc.amount as faucet_amount,\n        fc.claimed_at as faucet_claimed_at,...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'prediction.pools' does not exist in database",
      "query": "SELECT \n        e.*,\n        fc.amount as faucet_amount,\n        fc.claimed_at as faucet_claimed_at,...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.eligibility' does not exist in database",
      "query": "SELECT \n        e.*,\n        fc.amount as faucet_amount,\n        fc.claimed_at as faucet_claimed_at,...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.faucet_claims' does not exist in database",
      "query": "SELECT \n        e.*,\n        fc.amount as faucet_amount,\n        fc.claimed_at as faucet_claimed_at,...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.faucet_claims' does not exist in database",
      "query": "SELECT * FROM airdrop.faucet_claims WHERE LOWER(user_address) = LOWER($1)...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.bitr_activities' does not exist in database",
      "query": "SELECT \n        COUNT(CASE WHEN activity_type = 'POOL_CREATE' THEN 1 END) as pool_creations,\n       ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.faucet_claims)' does not exist in database",
      "query": "SELECT \n        (SELECT COUNT(*) FROM airdrop.faucet_claims) as total_faucet_claims,\n        (SELECT...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.eligibility' does not exist in database",
      "query": "SELECT \n        (SELECT COUNT(*) FROM airdrop.faucet_claims) as total_faucet_claims,\n        (SELECT...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.eligibility' does not exist in database",
      "query": "SELECT \n        COUNT(*) FILTER (WHERE has_faucet_claim = TRUE) as claimed_faucet,\n        COUNT(*) ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.faucet_claims' does not exist in database",
      "query": "SELECT \n        DATE(claimed_at) as claim_date,\n        COUNT(*) as claims_count\n      FROM airdrop....",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.snapshots' does not exist in database",
      "query": "SELECT * FROM airdrop.snapshots \n      ORDER BY created_at DESC \n      LIMIT 1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.snapshots' does not exist in database",
      "query": "SELECT id FROM airdrop.snapshots WHERE snapshot_name = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 306,
      "message": "Table 'airdrop.eligibility' does not exist in database",
      "query": "Snapshot '?' created successfully\n    });\n    \n  } catch (error) {\n    console.error('Error taking s...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/airdrop.js",
      "line": 1,
      "message": "Table 'airdrop.eligibility' does not exist in database",
      "query": "SELECT COUNT(*) as count FROM airdrop.eligibility WHERE is_eligible = TRUE...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/bitredict-pool.js",
      "line": 81,
      "message": "Column 'length' does not exist in table 'oracle.pools'",
      "query": "/pools/?,\n          method: 'GET'\n        }\n      }\n    });\n  }\n});\n\n/**\n * POST /api/bitredict-pool...",
      "suggestion": "Available columns: pool_id, creator_address, predicted_outcome, odds, creator_stake..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 31,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT 1 FROM analytics.pools ap \n            WHERE ap.pool_id = b.pool_id AND ap.uses_bitr = FALSE...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 31,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT 1 FROM analytics.pools ap \n            WHERE ap.pool_id = b.pool_id AND ap.uses_bitr = FALSE...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 31,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT 1 FROM analytics.pools ap \n            WHERE ap.pool_id = b.pool_id AND ap.uses_bitr = FALSE...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 1,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT \n        pool_id,\n        'POOL_CREATE' as activity_type,\n        creator_stake::text as amou...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 1,
      "message": "Table 'prediction.bets' does not exist in database",
      "query": "SELECT \n        b.pool_id,\n        'BET_PLACE' as activity_type,\n        b.amount::text as amount,\n ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 1,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT \n        b.pool_id,\n        'BET_PLACE' as activity_type,\n        b.amount::text as amount,\n ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 1,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT \n        COUNT(CASE \n          WHEN p.creator_address = LOWER($1) AND p.uses_bitr = FALSE \n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 1,
      "message": "Table 'prediction.bets' does not exist in database",
      "query": "SELECT \n        COUNT(CASE \n          WHEN p.creator_address = LOWER($1) AND p.uses_bitr = FALSE \n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 185,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "Claim BITR faucet: ?;\n      const recoveredAddress = ethers.verifyMessage(message, signature);\n     ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/faucet.js",
      "line": 185,
      "message": "Table 'prediction.bets' does not exist in database",
      "query": "Claim BITR faucet: ?;\n      const recoveredAddress = ethers.verifyMessage(message, signature);\n     ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/fixtures.js",
      "line": 1,
      "message": "Column 'weather_report' does not exist in table 'oracle.fixtures'",
      "query": "SELECT \n        f.id as fixture_id,\n        f.home_team,\n        f.away_team,\n        f.home_team_id...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/fixtures.js",
      "line": 775,
      "message": "Column 'weather_report' does not exist in table 'oracle.fixtures'",
      "query": "⚠️ Invalid Over/Under 2.5 odds: ?, setting to null);\n              odds.over25 = null;\n            }...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/matches.js",
      "line": 1,
      "message": "Table 'oddyssey.daily_games' does not exist in database",
      "query": "SELECT \n        dgm.match_id,\n        m.home_team,\n        m.away_team,\n        m.match_time,\n      ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/matches.js",
      "line": 1,
      "message": "Table 'oddyssey.daily_games' does not exist in database",
      "query": "SELECT \n        dgm.match_id,\n        m.home_team,\n        m.away_team,\n        m.match_time,\n      ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/monitoring-dashboard.js",
      "line": 127,
      "message": "Table 'oracle.system_alerts'' does not exist in database",
      "query": "SELECT * FROM oracle.system_alerts'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/monitoring-dashboard.js",
      "line": 1,
      "message": "Table 'oracle.results_fetching_logs)' does not exist in database",
      "query": "(SELECT \r\n          'results-fetching' as log_type,\r\n          operation_type,\r\n          fixture_co...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/monitoring-dashboard.js",
      "line": 1,
      "message": "Table 'oracle.cron_job_logs)' does not exist in database",
      "query": "(SELECT \r\n          'results-fetching' as log_type,\r\n          operation_type,\r\n          fixture_co...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1,
      "message": "Table 'information_schema.schemata' does not exist in database",
      "query": "SELECT schema_name \n      FROM information_schema.schemata \n      WHERE schema_name = 'oddyssey'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT table_name \n      FROM information_schema.tables \n      WHERE table_schema = 'oddyssey' \n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1,
      "message": "Table 'information_schema.schemata' does not exist in database",
      "query": "SELECT schema_name \n        FROM information_schema.schemata \n        WHERE schema_name = 'oddyssey'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT table_name \n        FROM information_schema.tables \n        WHERE table_schema = 'oracle' \n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 213,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "✅ Found ? matches for ?);\n\n      // Transform data to match frontend expectations\n      const transf...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 213,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "✅ Found ? matches for ?);\n\n      // Transform data to match frontend expectations\n      const transf...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1,
      "message": "Table 'information_schema.schemata' does not exist in database",
      "query": ",\n      data: {\n        today: result.matchCount\n      }\n    });\n\n  } catch (error) {\n    console.er...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT table_name \n      FROM information_schema.tables \n      WHERE table_schema = 'oddyssey' \n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1,
      "message": "Table 'information_schema.schemata' does not exist in database",
      "query": "SELECT schema_name \n        FROM information_schema.schemata \n        WHERE schema_name = 'oddyssey'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT table_name \n        FROM information_schema.tables \n        WHERE table_schema = 'oracle' \n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1039,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": "Found ? matches for today (expected: 10),\n        count: matchCount,\n        date: today\n      };\n\n ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1039,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": "Found ? matches for today (expected: 10),\n        count: matchCount,\n        date: today\n      };\n\n ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1367,
      "message": "Column 'length' does not exist in table 'public.predictions'",
      "query": "place-slip:?, 3, 60), async (req, res) => {\n  try {\n    const { playerAddress, predictions, cycleId ...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 1532,
      "message": "Column 'length' does not exist in table 'public.predictions'",
      "query": ", [playerAddress, actualCycleId, JSON.stringify(predictions), tx.hash]);\n\n    const slipId = slipRes...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/oddyssey.js",
      "line": 2045,
      "message": "Column 'map' does not exist in table 'public.predictions'",
      "query": "AND DATE(s.placed_at) >= $?;\n      queryParams.push(startDate);\n      paramIndex++;\n    }\n\n    if (e...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 22,
      "message": "Table 'core.pools' does not exist in database",
      "query": "🔍 Fetching claimable positions for user: ?);\n\n    // Query for claimable single pools\n    const sin...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 22,
      "message": "Table 'core.lp_stakes' does not exist in database",
      "query": "🔍 Fetching claimable positions for user: ?);\n\n    // Query for claimable single pools\n    const sin...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 22,
      "message": "Table 'core.bettor_stakes' does not exist in database",
      "query": "🔍 Fetching claimable positions for user: ?);\n\n    // Query for claimable single pools\n    const sin...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 22,
      "message": "Table 'core.prize_claims' does not exist in database",
      "query": "🔍 Fetching claimable positions for user: ?);\n\n    // Query for claimable single pools\n    const sin...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 1,
      "message": "Table 'core.combo_pools' does not exist in database",
      "query": "SELECT DISTINCT\n        cp.combo_pool_id,\n        cp.settled,\n        cp.creator_side_won,\n        c...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 1,
      "message": "Table 'core.combo_pool_pools' does not exist in database",
      "query": "SELECT DISTINCT\n        cp.combo_pool_id,\n        cp.settled,\n        cp.creator_side_won,\n        c...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 1,
      "message": "Table 'core.pools' does not exist in database",
      "query": "SELECT DISTINCT\n        cp.combo_pool_id,\n        cp.settled,\n        cp.creator_side_won,\n        c...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 1,
      "message": "Table 'core.combo_lp_stakes' does not exist in database",
      "query": "SELECT DISTINCT\n        cp.combo_pool_id,\n        cp.settled,\n        cp.creator_side_won,\n        c...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 1,
      "message": "Table 'core.combo_bettor_stakes' does not exist in database",
      "query": "SELECT DISTINCT\n        cp.combo_pool_id,\n        cp.settled,\n        cp.creator_side_won,\n        c...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools/claimable.js",
      "line": 1,
      "message": "Table 'core.combo_prize_claims' does not exist in database",
      "query": "SELECT DISTINCT\n        cp.combo_pool_id,\n        cp.settled,\n        cp.creator_side_won,\n        c...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 84,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT reputation FROM core.users WHERE address = pa.creator_address...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 84,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT reputation FROM core.users WHERE address = pa.creator_address...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 284,
      "message": "Table 'core.pool_creation_notifications' does not exist in database",
      "query": "INSERT INTO core.pool_creation_notifications \n      (pool_id, creator_address, notification_type, me...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 84,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT reputation FROM core.users WHERE address = pa.creator_address...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 84,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT reputation FROM core.users WHERE address = pa.creator_address...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 1,
      "message": "Table 'prediction.bets' does not exist in database",
      "query": "SELECT \n        pa.pool_id,\n        pa.creator_address,\n        pa.odds,\n        pa.is_settled,\n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        pa.pool_id,\n        pa.creator_address,\n        pa.odds,\n        pa.is_settled,\n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 1,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT \n        pa.pool_id,\n        pa.creator_address,\n        pa.odds,\n        pa.is_settled,\n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 1,
      "message": "Table 'prediction.bets' does not exist in database",
      "query": "SELECT \n        pa.pool_id,\n        pa.creator_address,\n        pa.odds,\n        pa.is_settled,\n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        pa.pool_id,\n        pa.creator_address,\n        pa.odds,\n        pa.is_settled,\n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 1,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT \n        pa.pool_id,\n        pa.creator_address,\n        pa.odds,\n        pa.is_settled,\n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 1,
      "message": "Table 'core.pool_creation_notifications' does not exist in database",
      "query": "INSERT INTO core.pool_creation_notifications \n      (pool_id, creator_address, notification_type, me...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 323,
      "message": "Table 'prediction.bets' does not exist in database",
      "query": "Triggering immediate indexing for transaction: ?);\n    \n    // TODO: Implement real-time indexing tr...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 323,
      "message": "Table 'core.users' does not exist in database",
      "query": "Triggering immediate indexing for transaction: ?);\n    \n    // TODO: Implement real-time indexing tr...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/pools.js",
      "line": 323,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "Triggering immediate indexing for transaction: ?);\n    \n    // TODO: Implement real-time indexing tr...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/reputation.js",
      "line": 17,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT reputation, joined_at, last_active FROM core.users WHERE address = $1',\n      [address.toLowe...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/reputation.js",
      "line": 1,
      "message": "Table 'core.reputation_actions' does not exist in database",
      "query": "SELECT \n        action_type,\n        reputation_delta,\n        associated_value,\n        pool_id,\n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/reputation.js",
      "line": 1,
      "message": "Table 'core.reputation_actions' does not exist in database",
      "query": "SELECT \n        action_type,\n        reputation_delta,\n        associated_value,\n        pool_id,\n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 526,
      "message": "Table 'oracle.fixture_odds'' does not exist in database",
      "query": "DELETE FROM oracle.fixture_odds'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 526,
      "message": "Table 'oracle.fixtures'' does not exist in database",
      "query": "DELETE FROM oracle.fixtures'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT table_name \n        FROM information_schema.tables \n        WHERE table_schema = 'oracle' \n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 534,
      "message": "Table 'oracle.fixtures');' does not exist in database",
      "query": "✅ Fetched fixtures for 7 days for Guided Markets);\n      \n      // The 7-day fetch already includes ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 534,
      "message": "Table 'oracle.fixture_odds');' does not exist in database",
      "query": "✅ Fetched fixtures for 7 days for Guided Markets);\n      \n      // The 7-day fetch already includes ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 534,
      "message": "Table 'oracle.leagues');' does not exist in database",
      "query": "✅ Fetched fixtures for 7 days for Guided Markets);\n      \n      // The 7-day fetch already includes ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'public.teams'",
      "query": "📊 COMPLETE Database Summary:\n   • Leagues: ?\n   • Total Fixtures: ?\n   • Oddyssey Fixtures (1-day):...",
      "suggestion": "Available columns: id, team_id, name, short_name, logo..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'public.teams'",
      "query": "📊 COMPLETE Database Summary:\n   • Leagues: ?\n   • Total Fixtures: ?\n   • Oddyssey Fixtures (1-day):...",
      "suggestion": "Available columns: id, team_id, name, short_name, logo..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'public.teams'",
      "query": "📊 COMPLETE Database Summary:\n   • Leagues: ?\n   • Total Fixtures: ?\n   • Oddyssey Fixtures (1-day):...",
      "suggestion": "Available columns: id, team_id, name, short_name, logo..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 1,
      "message": "Column 'push' does not exist in table 'oracle.fixtures'",
      "query": "📊 COMPLETE Database Summary:\n   • Leagues: ?\n   • Total Fixtures: ?\n   • Oddyssey Fixtures (1-day):...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'oracle.fixtures'",
      "query": "📊 TOTAL Database Summary:\n   • Total Fixtures: ? (Oddyssey + Guided Markets)\n   • Total Odds: ?\n   ...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 1174,
      "message": "Table 'oracle.fixtures');' does not exist in database",
      "query": "📊 Found ? existing fixtures for today);\n\n      // Fetch 7-day fixtures using the new SportMonks ser...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/server.js",
      "line": 1174,
      "message": "Table 'oracle.fixture_odds');' does not exist in database",
      "query": "📊 Found ? existing fixtures for today);\n\n      // Fetch 7-day fixtures using the new SportMonks ser...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.pool_comments' does not exist in database",
      "query": "SELECT \n        pc.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        pc.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        pc.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 68,
      "message": "Table 'core.pool_comments' does not exist in database",
      "query": "INSERT INTO core.pool_comments \n      (pool_id, user_address, content, sentiment, parent_comment_id...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 76,
      "message": "Table 'analytics.user_social_stats' does not exist in database",
      "query": "INSERT INTO analytics.user_social_stats (user_address, total_comments...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.community_discussions' does not exist in database",
      "query": "SELECT \n        cd.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        cd.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        cd.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 177,
      "message": "Table 'core.community_discussions' does not exist in database",
      "query": "INSERT INTO core.community_discussions \n      (user_address, title, content, category, tags...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.discussion_replies' does not exist in database",
      "query": "SELECT \n        dr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        dr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        dr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 250,
      "message": "Table 'core.social_reactions' does not exist in database",
      "query": "INSERT INTO core.social_reactions \n      (user_address, target_type, target_id, reaction_type...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 263,
      "message": "Table 'core.pool_comments' does not exist in database",
      "query": "UPDATE core.pool_comments \n        SET likes_count = (\n          SELECT COUNT(*...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 272,
      "message": "Table 'core.community_discussions' does not exist in database",
      "query": "UPDATE core.community_discussions \n        SET total_likes = (\n          SELECT COUNT(*...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 336,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT * FROM core.user_badges \n      WHERE user_address = $1 AND is_active = true\n      ORDER BY \n ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.pool_reflections' does not exist in database",
      "query": "SELECT \n        pr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        pr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        pr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 68,
      "message": "Table 'core.pool_reflections' does not exist in database",
      "query": "INSERT INTO core.pool_reflections \n      (pool_id, user_address, confidence, would_bet_again, lesson...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 76,
      "message": "Table 'analytics.user_social_stats' does not exist in database",
      "query": "INSERT INTO analytics.user_social_stats (user_address, total_reflections...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 505,
      "message": "Table 'analytics.pool_challenge_scores' does not exist in database",
      "query": "SELECT * FROM analytics.pool_challenge_scores \n      WHERE pool_id = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 505,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT * FROM analytics.pools WHERE pool_id = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 76,
      "message": "Table 'analytics.pool_challenge_scores' does not exist in database",
      "query": "INSERT INTO analytics.pool_challenge_scores \n      (pool_id, creator_address, quality_score, challen...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 505,
      "message": "Table 'analytics.bitr_rewards' does not exist in database",
      "query": "SELECT * FROM analytics.bitr_rewards \n      WHERE pool_id = $1\n      ORDER BY earned_at DESC...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 630,
      "message": "Table 'analytics.pool_challenge_scores' does not exist in database",
      "query": "SELECT challenge_score FROM analytics.pool_challenge_scores \n      WHERE pool_id = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 76,
      "message": "Table 'analytics.bitr_rewards' does not exist in database",
      "query": "INSERT INTO analytics.bitr_rewards \n      (pool_id, user_address, reward_type, amount...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 677,
      "message": "Table 'core.community_discussions' does not exist in database",
      "query": "SELECT user_address FROM core.community_discussions WHERE is_deleted = false\n          UNION\n       ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 677,
      "message": "Table 'core.pool_comments' does not exist in database",
      "query": "SELECT user_address FROM core.community_discussions WHERE is_deleted = false\n          UNION\n       ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 505,
      "message": "Table 'analytics.user_social_stats' does not exist in database",
      "query": "SELECT * FROM analytics.user_social_stats \n      WHERE user_address = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.pool_comments' does not exist in database",
      "query": "SELECT \n        pc.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        pc.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        pc.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.pool_comments' does not exist in database",
      "query": "INSERT INTO core.pool_comments \n      (pool_id, user_address, content, sentiment, parent_comment_id)...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.user_social_stats' does not exist in database",
      "query": "INSERT INTO analytics.user_social_stats (user_address, total_comments)\n      VALUES ($1, 1)\n      ON...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.community_discussions' does not exist in database",
      "query": "SELECT \n        cd.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        cd.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        cd.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.community_discussions' does not exist in database",
      "query": "INSERT INTO core.community_discussions \n      (user_address, title, content, category, tags)\n      V...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.discussion_replies' does not exist in database",
      "query": "SELECT \n        dr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        dr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        dr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.social_reactions' does not exist in database",
      "query": "INSERT INTO core.social_reactions \n      (user_address, target_type, target_id, reaction_type)\n     ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.social_reactions' does not exist in database",
      "query": "UPDATE core.pool_comments \n        SET likes_count = (\n          SELECT COUNT(*) FROM core.social_re...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.pool_comments' does not exist in database",
      "query": "UPDATE core.pool_comments \n        SET likes_count = (\n          SELECT COUNT(*) FROM core.social_re...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.social_reactions' does not exist in database",
      "query": "UPDATE core.community_discussions \n        SET total_likes = (\n          SELECT COUNT(*) FROM core.s...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.community_discussions' does not exist in database",
      "query": "UPDATE core.community_discussions \n        SET total_likes = (\n          SELECT COUNT(*) FROM core.s...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.social_reactions' does not exist in database",
      "query": "SELECT \n        reaction_type,\n        COUNT(*) as count\n      FROM core.social_reactions \n      WHE...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT * FROM core.user_badges \n      WHERE user_address = $1 AND is_active = true\n      ORDER BY \n ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.pool_reflections' does not exist in database",
      "query": "SELECT \n        pr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        pr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        pr.*,\n        u.reputation,\n        ub.title as user_badge,\n        ub.rarity as bad...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.pool_reflections' does not exist in database",
      "query": "INSERT INTO core.pool_reflections \n      (pool_id, user_address, confidence, would_bet_again, lesson...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.user_social_stats' does not exist in database",
      "query": "INSERT INTO analytics.user_social_stats (user_address, total_reflections)\n      VALUES ($1, 1)\n     ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.pool_challenge_scores' does not exist in database",
      "query": "SELECT * FROM analytics.pool_challenge_scores \n      WHERE pool_id = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT * FROM analytics.pools WHERE pool_id = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "SELECT \n        COUNT(*) as total_pools,\n        COUNT(CASE WHEN creator_side_won = true THEN 1 END)...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.pool_challenge_scores' does not exist in database",
      "query": "INSERT INTO analytics.pool_challenge_scores \n      (pool_id, creator_address, quality_score, challen...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.bitr_rewards' does not exist in database",
      "query": "SELECT * FROM analytics.bitr_rewards \n      WHERE pool_id = $1\n      ORDER BY earned_at DESC...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.pool_challenge_scores' does not exist in database",
      "query": "SELECT challenge_score FROM analytics.pool_challenge_scores \n      WHERE pool_id = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.bitr_rewards' does not exist in database",
      "query": "INSERT INTO analytics.bitr_rewards \n      (pool_id, user_address, reward_type, amount)\n      VALUES ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.community_discussions' does not exist in database",
      "query": "SELECT COUNT(*) as count\n        FROM core.community_discussions \n        WHERE created_at >= NOW() ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.community_discussions' does not exist in database",
      "query": "SELECT COUNT(DISTINCT user_address) as count\n        FROM (\n          SELECT user_address FROM core....",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.pool_comments' does not exist in database",
      "query": "SELECT COUNT(DISTINCT user_address) as count\n        FROM (\n          SELECT user_address FROM core....",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.pool_comments' does not exist in database",
      "query": "SELECT \n          (SELECT COUNT(*) FROM core.pool_comments WHERE is_deleted = false) +\n          (SE...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.discussion_replies' does not exist in database",
      "query": "SELECT \n          (SELECT COUNT(*) FROM core.pool_comments WHERE is_deleted = false) +\n          (SE...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'core.social_reactions' does not exist in database",
      "query": "SELECT COUNT(*) as count\n        FROM core.social_reactions \n        WHERE reaction_type = 'like'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/social.js",
      "line": 1,
      "message": "Table 'analytics.user_social_stats' does not exist in database",
      "query": "SELECT * FROM analytics.user_social_stats \n      WHERE user_address = $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 246,
      "message": "Table 'airdrop.staking_activities' does not exist in database",
      "query": "SELECT action_type, amount, tier_id, duration_option, timestamp, tx_hash, block_number\n      FROM ai...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT FROM information_schema.tables \n          WHERE table_schema = 'ana...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT FROM information_schema.tables \n          WHERE table_schema = 'ana...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 1,
      "message": "Table 'airdrop.staking_activities' does not exist in database",
      "query": "SELECT \n          COUNT(DISTINCT user_address) as unique_stakers,\n          COUNT(*) as total_stakes...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 120,
      "message": "Table 'airdrop.staking_activities' does not exist in database",
      "query": "? days\n        }))\n      }));\n    } catch (tierError) {\n      console.warn('⚠️ Tier formatting faile...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 300,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "AND se.timestamp >= NOW() - INTERVAL '? days';\n    }\n\n    let leaderboardQuery;\n    try {\n      // C...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 1,
      "message": "Table 'analytics.staking_events' does not exist in database",
      "query": "SELECT \n            se.user_address,\n            SUM(CASE WHEN se.action_type = 'STAKE' THEN se.amou...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT FROM information_schema.tables \n          WHERE table_schema = 'ana...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 1,
      "message": "Table 'analytics.staking_events' does not exist in database",
      "query": "SELECT \n            tier_id,\n            COUNT(DISTINCT user_address) as unique_stakers,\n           ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 1,
      "message": "Table 'analytics.staking_events' does not exist in database",
      "query": "Tier ?,\n      baseAPY: Number(tier?.baseAPY || 0),\n      minStake: (tier?.minStake || 0).toString(),...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 1,
      "message": "Table 'analytics.staking_events' does not exist in database",
      "query": "SELECT \n        tier_id,\n        COUNT(*) as stake_count,\n        SUM(amount::numeric) as total_amou...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/staking.js",
      "line": 1,
      "message": "Table 'analytics.staking_events' does not exist in database",
      "query": "SELECT \n        duration_option,\n        COUNT(*) as stake_count,\n        SUM(amount::numeric) as to...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        address,\n        reputation,\n        total_volume,\n        profit_loss,\n        tota...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        id,\n        badge_type,\n        badge_category,\n        title,\n        description,\n...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 1,
      "message": "Table 'core.user_activity' does not exist in database",
      "query": "SELECT \n        id,\n        activity_type,\n        description,\n        amount,\n        pool_id,\n   ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 1,
      "message": "Table 'core.user_category_performance' does not exist in database",
      "query": "SELECT \n        category,\n        total_bets,\n        won_bets,\n        total_volume,\n        profit...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 1,
      "message": "Table 'core.user_portfolio' does not exist in database",
      "query": "SELECT \n        active_bets,\n        active_pools_created,\n        total_value,\n        potential_wi...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT \n        address,\n        reputation,\n        total_volume,\n        profit_loss,\n        tota...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 1,
      "message": "Table 'core.user_badges' does not exist in database",
      "query": "SELECT \n        id,\n        badge_type,\n        badge_category,\n        title,\n        description,\n...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 1,
      "message": "Table 'core.user_activity' does not exist in database",
      "query": "SELECT \n        id,\n        activity_type,\n        description,\n        amount,\n        pool_id,\n   ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 175,
      "message": "Table 'core.user_category_performance' does not exist in database",
      "query": "? STT : null,\n      pool_id: activity.pool_id,\n      category: activity.category,\n      timestamp: a...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "api/users.js",
      "line": 1,
      "message": "Table 'core.user_portfolio' does not exist in database",
      "query": "SELECT \n        active_bets,\n        active_pools_created,\n        total_value,\n        potential_wi...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 81,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "INSERT INTO system.cron_locks (job_name, locked_by, expires_at, metadata...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 81,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "INSERT INTO system.cron_execution_log (job_name, execution_id, status, metadata...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 119,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "DELETE FROM system.cron_locks \r\n        WHERE job_name = $1 AND execution_id = $2\r\n        RETURNING...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 130,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "UPDATE system.cron_execution_log \r\n          SET status = $1, completed_at = NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 152,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "SELECT 1 FROM system.cron_locks \r\n        WHERE job_name = $1 AND expires_at > NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 183,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "SELECT status FROM system.cron_execution_log \r\n            WHERE job_name = $1 \r\n            AND sta...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 119,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "DELETE FROM system.cron_locks \r\n        WHERE expires_at < NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 130,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "UPDATE system.cron_execution_log \r\n            SET status = 'timeout', completed_at = NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 1,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "SELECT \r\n          execution_id,\r\n          status,\r\n          started_at,\r\n          completed_at,\r...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 376,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "SELECT job_name, locked_by, locked_at, expires_at, metadata\r\n        FROM system.cron_locks \r\n      ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 119,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "DELETE FROM system.cron_locks \r\n        WHERE job_name = $1\r\n        RETURNING execution_id...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 130,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "UPDATE system.cron_execution_log \r\n          SET status = 'force_released', completed_at = NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 21,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "CREATE SCHEMA IF NOT EXISTS system);\r\n      \r\n      // Create cron_locks table\r\n      await db.query...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 1,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "INSERT INTO system.cron_execution_log (job_name, execution_id, status, metadata)\r\n          VALUES (...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 96,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "🔒 Lock acquired for job: ? (?));\r\n        return executionId;\r\n      } else {\r\n        console.log(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 1,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "UPDATE system.cron_execution_log \r\n          SET status = $1, completed_at = NOW(), duration_ms = $2...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 135,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "🔓 Lock released for job: ? (?) - ?);\r\n      }\r\n    } catch (error) {\r\n      console.error(❌ Failed ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 158,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "❌ Failed to check lock status for job ?:, error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Wa...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 193,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "✅ Dependency completed: ?);\r\n              return true;\r\n            } else if (status === 'failed')...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 322,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "🧹 Cleaned up ? expired locks);\r\n        \r\n        // Mark these executions as timed out\r\n        fo...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 1,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "SELECT \r\n          execution_id,\r\n          status,\r\n          started_at,\r\n          completed_at,\r...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 363,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "❌ Failed to get execution history for ?:, error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get c...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 1,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "SELECT \r\n          job_name,\r\n          COUNT(*) as total_executions,\r\n          COUNT(*) FILTER (WH...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 1,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "DELETE FROM system.cron_locks \r\n        WHERE job_name = $1\r\n        RETURNING execution_id...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/cron-coordinator.js",
      "line": 1,
      "message": "Table 'system.cron_execution_log' does not exist in database",
      "query": "UPDATE system.cron_execution_log \r\n          SET status = 'force_released', completed_at = NOW(), er...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/health-monitor.js",
      "line": 109,
      "message": "Table 'information_schema.schemata' does not exist in database",
      "query": "SELECT schema_name \r\n        FROM information_schema.schemata \r\n        WHERE schema_name IN ('core'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/health-monitor.js",
      "line": 277,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "SELECT job_name, locked_at, locked_by, expires_at\r\n        FROM system.cron_locks\r\n        WHERE exp...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/health-monitor.js",
      "line": 1,
      "message": "Table 'information_schema.schemata' does not exist in database",
      "query": "SELECT schema_name \r\n        FROM information_schema.schemata \r\n        WHERE schema_name IN ('core'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/health-monitor.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT COUNT(*) as count \r\n            FROM information_schema.tables \r\n            WHERE table_sche...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/health-monitor.js",
      "line": 182,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "?/leagues, {\r\n        params: { api_token: config.sportmonks.apiToken },\r\n        timeout: 5000\r\n   ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/health-monitor.js",
      "line": 433,
      "message": "Table 'system.cron_locks' does not exist in database",
      "query": "?MB,\r\n        total: ?MB,\r\n        external: ?MB,\r\n        rss: ?MB\r\n      },\r\n      cpu: process.cp...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-manager.js",
      "line": 472,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "update matches in oracle.daily_game_matches with the oracle cycle_id\n      // Get match IDs from the...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-manager.js",
      "line": 472,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "update matches in oracle.daily_game_matches with the oracle cycle_id\n      // Get match IDs from the...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/oddyssey-manager.js",
      "line": 492,
      "message": "Table 'oracle.current_oddyssey_cycle'' does not exist in database",
      "query": "delete existing row, then insert new current cycle\n      await db.query('DELETE FROM oracle.current_...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-manager.js",
      "line": 393,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": "?. Match ? at ?);\n      });\n\n      // Call contract function\n      const tx = await this.oddysseyCon...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-manager.js",
      "line": 393,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": "?. Match ? at ?);\n      });\n\n      // Call contract function\n      const tx = await this.oddysseyCon...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-manager.js",
      "line": 393,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "?. Match ? at ?);\n      });\n\n      // Call contract function\n      const tx = await this.oddysseyCon...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-manager.js",
      "line": 393,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "?. Match ? at ?);\n      });\n\n      // Call contract function\n      const tx = await this.oddysseyCon...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT 1 FROM information_schema.tables \n          WHERE table_schema = 'o...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 325,
      "message": "Table '?.daily_game_matches' does not exist in database",
      "query": "INSERT INTO ?.daily_game_matches (\n            fixture_id, home_team, away_team, league_name, match_...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT 1 FROM information_schema.tables \n          WHERE table_schema = 'o...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Table '?.daily_game_matches' does not exist in database",
      "query": "SELECT \n          dgm.*,\n          f.home_team, f.away_team, f.match_date, f.league_name\n        FRO...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 56,
      "message": "Column 'length' does not exist in table 'oracle.fixtures'",
      "query": "🕐 Current UTC time: ?);\n\n      // Get all fixtures for the target date with odds\n      console.log(...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 56,
      "message": "Column 'length' does not exist in table 'oracle.fixtures'",
      "query": "🕐 Current UTC time: ?);\n\n      // Get all fixtures for the target date with odds\n      console.log(...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 56,
      "message": "Column 'push' does not exist in table 'oracle.fixtures'",
      "query": "🕐 Current UTC time: ?);\n\n      // Get all fixtures for the target date with odds\n      console.log(...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 56,
      "message": "Column 'length' does not exist in table 'oracle.fixtures'",
      "query": "🕐 Current UTC time: ?);\n\n      // Get all fixtures for the target date with odds\n      console.log(...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 148,
      "message": "Column 'length' does not exist in table 'oracle.fixtures'",
      "query": "❌ Error getting fixtures for ?:, error);\n      return [];\n    }\n  }\n\n  /**\n   * Select the best matc...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 148,
      "message": "Column 'map' does not exist in table 'oracle.fixtures'",
      "query": "❌ Error getting fixtures for ?:, error);\n      return [];\n    }\n  }\n\n  /**\n   * Select the best matc...",
      "suggestion": "Did you mean: odds_mapping_validated?"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT 1 FROM information_schema.tables \n          WHERE table_schema = 'o...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Table '?.daily_game_matches' does not exist in database",
      "query": "CREATE TABLE IF NOT EXISTS oracle.daily_game_matches (\n              id SERIAL PRIMARY KEY,\n        ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 316,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": "⚠️ Matches already exist for ? (? matches). Skipping to preserve consistency.);\n        return; // D...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 316,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": "⚠️ Matches already exist for ? (? matches). Skipping to preserve consistency.);\n        return; // D...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": ", [\n          match.fixtureId, // Use match.fixtureId\n          match.homeTeam,\n          match.away...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Table '?.daily_game_matches' does not exist in database",
      "query": "SELECT \n          dgm.*,\n          f.home_team, f.away_team, f.match_date, f.league_name\n        FRO...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": ", error.message);\n        results.push({\n          date: date.toISOString().split('T')[0],\n         ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": ", error.message);\n        results.push({\n          date: date.toISOString().split('T')[0],\n         ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Column 'forEach' does not exist in table 'oracle.matches'",
      "query": ");\n    }\n\n    // Validate each match has required odds\n    matches.forEach((match, index) => {\n     ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-match-selector.js",
      "line": 1,
      "message": "Column 'forEach' does not exist in table 'public.matches'",
      "query": ");\n    }\n\n    // Validate each match has required odds\n    matches.forEach((match, index) => {\n     ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-results-resolver.js",
      "line": 588,
      "message": "Column 'filter' does not exist in table 'oracle.matches'",
      "query": "⚠️ Cycle ? missing fixture data: found ?/10 fixtures);\n        return false;\n      }\n\n      const ma...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-results-resolver.js",
      "line": 588,
      "message": "Column 'filter' does not exist in table 'public.matches'",
      "query": "⚠️ Cycle ? missing fixture data: found ?/10 fixtures);\n        return false;\n      }\n\n      const ma...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-results-resolver.js",
      "line": 588,
      "message": "Column 'filter' does not exist in table 'oracle.matches'",
      "query": "⚠️ Cycle ? missing fixture data: found ?/10 fixtures);\n        return false;\n      }\n\n      const ma...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-results-resolver.js",
      "line": 588,
      "message": "Column 'filter' does not exist in table 'public.matches'",
      "query": "⚠️ Cycle ? missing fixture data: found ?/10 fixtures);\n        return false;\n      }\n\n      const ma...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-results-resolver.js",
      "line": 588,
      "message": "Column 'forEach' does not exist in table 'oracle.matches'",
      "query": "⚠️ Cycle ? missing fixture data: found ?/10 fixtures);\n        return false;\n      }\n\n      const ma...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-results-resolver.js",
      "line": 588,
      "message": "Column 'forEach' does not exist in table 'public.matches'",
      "query": "⚠️ Cycle ? missing fixture data: found ?/10 fixtures);\n        return false;\n      }\n\n      const ma...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-results-resolver.js",
      "line": 588,
      "message": "Column 'filter' does not exist in table 'oracle.matches'",
      "query": "⚠️ Cycle ? missing fixture data: found ?/10 fixtures);\n        return false;\n      }\n\n      const ma...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/oddyssey-results-resolver.js",
      "line": 588,
      "message": "Column 'filter' does not exist in table 'public.matches'",
      "query": "⚠️ Cycle ? missing fixture data: found ?/10 fixtures);\n        return false;\n      }\n\n      const ma...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 108,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": "⚠️ No matches found with cycle_id = 0 for ?);\r\n        return {\r\n          success: true,\r\n         ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 108,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": "⚠️ No matches found with cycle_id = 0 for ?);\r\n        return {\r\n          success: true,\r\n         ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": ", [date]);\r\n\r\n      return {\r\n        count: parseInt(result.rows[0].count),\r\n        cycleId: resul...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": ", [date]);\r\n\r\n      return {\r\n        count: parseInt(result.rows[0].count),\r\n        cycleId: resul...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": ", [\r\n          match.fixture_id,\r\n          match.home_team,\r\n          match.away_team,\r\n          ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": ", [\r\n          match.fixture_id,\r\n          match.home_team,\r\n          match.away_team,\r\n          ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": ", [\r\n          match.fixture_id,\r\n          match.home_team,\r\n          match.away_team,\r\n          ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": ", [\r\n          match.fixture_id,\r\n          match.home_team,\r\n          match.away_team,\r\n          ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": ");\r\n    }\r\n\r\n    // Check for duplicates\r\n    const fixtureIds = matches.map(m => m.fixture_id);\r\n  ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": ");\r\n    }\r\n\r\n    // Check for duplicates\r\n    const fixtureIds = matches.map(m => m.fixture_id);\r\n  ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": ");\r\n    }\r\n\r\n    // Check for duplicates\r\n    const fixtureIds = matches.map(m => m.fixture_id);\r\n  ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": ");\r\n    }\r\n\r\n    // Check for duplicates\r\n    const fixtureIds = matches.map(m => m.fixture_id);\r\n  ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/prisma-service.js",
      "line": 1,
      "message": "Table 'analytics.staking_events' does not exist in database",
      "query": "SELECT \n          COUNT(DISTINCT user_address) as unique_stakers,\n          COUNT(*) as total_events...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 102,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT address, reputation, last_active\n        FROM core.users \n        WHERE reputation > 0 \n     ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 117,
      "message": "Column 'rows' does not exist in table 'public.users'",
      "query": "update reputation scores\n      const addresses = users.rows.map(user => user.address...",
      "suggestion": "Available columns: id, address, username, email, balance..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 124,
      "message": "Table 'reputation.' does not exist in database",
      "query": "update reputation. Please authorize:', this.wallet.address...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "UPDATE core.users \n        SET last_synced_at = NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 174,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT reputation FROM core.users WHERE address = $1',\n        [userAddress]...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 192,
      "message": "Table 'core.users' does not exist in database",
      "query": "Update sync timestamp\n      await db.query(\n        'UPDATE core.users SET last_synced_at = NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 36,
      "message": "Table 'core.users' does not exist in database",
      "query": "✅ ReputationSystem ABI loaded from: ?);\n          break;\n        } catch (pathError) {\n          // ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": ", [addresses]);\n\n      console.log(✅ Synced ? reputation scores to blockchain);\n\n    } catch (error)...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": ");\n\n      await tx.wait();\n      console.log(✅ Synced reputation for ?: ?);\n\n      // Update sync ti...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": ", error);\n    }\n  }\n\n  /**\n   * Get reputation sync status\n   */\n  async getSyncStatus() {\n    try {...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "services/reputation-sync-service.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT COUNT(*) as count\n        FROM core.users \n        WHERE reputation > 0...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/results-fetcher-service.js",
      "line": 221,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": "📊 Found ? matches to backfill);\n\n      // Process in smaller batches to avoid rate limiting\n      c...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/results-fetcher-service.js",
      "line": 221,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": "📊 Found ? matches to backfill);\n\n      // Process in smaller batches to avoid rate limiting\n      c...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/results-fetcher-service.js",
      "line": 221,
      "message": "Column 'slice' does not exist in table 'oracle.matches'",
      "query": "📊 Found ? matches to backfill);\n\n      // Process in smaller batches to avoid rate limiting\n      c...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/results-fetcher-service.js",
      "line": 221,
      "message": "Column 'slice' does not exist in table 'public.matches'",
      "query": "📊 Found ? matches to backfill);\n\n      // Process in smaller batches to avoid rate limiting\n      c...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/results-fetcher-service.js",
      "line": 221,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": "📊 Found ? matches to backfill);\n\n      // Process in smaller batches to avoid rate limiting\n      c...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/results-fetcher-service.js",
      "line": 221,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": "📊 Found ? matches to backfill);\n\n      // Process in smaller batches to avoid rate limiting\n      c...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/slip-evaluation-service.js",
      "line": 97,
      "message": "Column 'find' does not exist in table 'oracle.matches'",
      "query": ", [evaluatedCount, jobId]);\n      \n      console.log(🎉 ?: Completed evaluation for cycle ? - ? slip...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/slip-evaluation-service.js",
      "line": 97,
      "message": "Column 'find' does not exist in table 'public.matches'",
      "query": ", [evaluatedCount, jobId]);\n      \n      console.log(🎉 ?: Completed evaluation for cycle ? - ? slip...",
      "suggestion": "Did you mean: id?"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/unified-evaluation-service.js",
      "line": 165,
      "message": "Column 'length' does not exist in table 'public.predictions'",
      "query": ", [evaluation.correctCount, evaluation.finalScore, evaluation.rank, slip.slip_id]);\n          \n     ...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/web3-service.js",
      "line": 1,
      "message": "Column 'length' does not exist in table 'public.predictions'",
      "query": ");\n        return tx;\n      } catch (error) {\n        console.error(❌ Transaction failed (attempt ?/...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "services/web3-service.js",
      "line": 1,
      "message": "Column 'map' does not exist in table 'public.predictions'",
      "query": ");\n        return tx;\n      } catch (error) {\n        console.error(❌ Transaction failed (attempt ?/...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 37,
      "message": "Table 'task...'' does not exist in database",
      "query": "update task...'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 97,
      "message": "Table 'airdrop.bitr_activities' does not exist in database",
      "query": "SELECT DISTINCT user_address \n      FROM airdrop.bitr_activities \n      WHERE timestamp >= NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 97,
      "message": "Table 'airdrop.faucet_claims' does not exist in database",
      "query": "SELECT DISTINCT user_address \n      FROM airdrop.faucet_claims \n      WHERE claimed_at >= NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 97,
      "message": "Table 'airdrop.staking_activities' does not exist in database",
      "query": "SELECT DISTINCT user_address \n      FROM airdrop.staking_activities \n      WHERE timestamp >= NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 133,
      "message": "Table 'airdrop.statistics' does not exist in database",
      "query": "INSERT INTO airdrop.statistics (\n        stat_date,\n        total_faucet_claims,\n        total_eligi...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 172,
      "message": "Table 'airdrop.transfer_patterns' does not exist in database",
      "query": "DELETE FROM airdrop.transfer_patterns \n      WHERE timestamp < NOW(...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 172,
      "message": "Table 'airdrop.statistics' does not exist in database",
      "query": "DELETE FROM airdrop.statistics \n      WHERE stat_date < CURRENT_DATE - INTERVAL '1 year'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 1,
      "message": "Table 'airdrop.statistics' does not exist in database",
      "query": "INSERT INTO airdrop.statistics (\n        stat_date,\n        total_faucet_claims,\n        total_eligi...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 1,
      "message": "Table 'airdrop.transfer_patterns' does not exist in database",
      "query": "DELETE FROM airdrop.transfer_patterns \n      WHERE timestamp < NOW() - INTERVAL '90 days'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "cron/airdrop-scheduler.js",
      "line": 176,
      "message": "Table 'airdrop.statistics' does not exist in database",
      "query": "Cleaned up ? old transfer pattern records);\n\n    // Clean up old statistics (keep 1 year)\n    const ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "cron/coordinated-oddyssey-scheduler.js",
      "line": 373,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "ℹ️ Cycle ? ended recently, waiting for match completion);\r\n        return false;\r\n      }\r\n\r\n      /...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "cron/coordinated-oddyssey-scheduler.js",
      "line": 373,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "ℹ️ Cycle ? ended recently, waiting for match completion);\r\n        return false;\r\n      }\r\n\r\n      /...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "cron/crypto-scheduler.js",
      "line": 370,
      "message": "Column 'length' does not exist in table 'oracle.coins'",
      "query": "✅ Successfully resolved market ? with result: ?);\n  }\n\n  /**\n   * Update coin metadata from Coinpapr...",
      "suggestion": "Available columns: id, symbol, name, price_usd, market_cap_usd..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "cron/master-coordinator.js",
      "line": 1,
      "message": "Column 'manualRefreshFixtures' does not exist in table 'oracle.fixtures'",
      "query": ";\r\n        }\r\n      }\r\n\r\n      console.log('🔓 Force release results:', results);\r\n      return resu...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "cron/master-coordinator.js",
      "line": 1,
      "message": "Column 'manualUpdateOdds' does not exist in table 'oracle.fixtures'",
      "query": ";\r\n        }\r\n      }\r\n\r\n      console.log('🔓 Force release results:', results);\r\n      return resu...",
      "suggestion": "Available columns: id, name, home_team_id, away_team_id, home_team..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "cron/oddyssey-scheduler.js",
      "line": 274,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "ℹ️  Cycle ? ended recently, waiting for match completion);\n        return false;\n      }\n\n      // C...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "cron/oddyssey-scheduler.js",
      "line": 274,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "ℹ️  Cycle ? ended recently, waiting for match completion);\n        return false;\n      }\n\n      // C...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 71,
      "message": "Table 'prediction.pools' does not exist in database",
      "query": "SELECT pool_id, creator_address, created_at FROM prediction.pools LIMIT 3'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 89,
      "message": "Table 'oracle.pool_bets'' does not exist in database",
      "query": "DELETE FROM oracle.pool_bets'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 89,
      "message": "Table 'oracle.pools'' does not exist in database",
      "query": "DELETE FROM oracle.pools'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 109,
      "message": "Table 'prediction.bets'' does not exist in database",
      "query": "DELETE FROM prediction.bets'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 109,
      "message": "Table 'prediction.pools'' does not exist in database",
      "query": "DELETE FROM prediction.pools'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 130,
      "message": "Table 'analytics.pools'' does not exist in database",
      "query": "DELETE FROM analytics.pools'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 64,
      "message": "Table 'prediction.pools' does not exist in database",
      "query": "• oracle.pools: ?);\n      console.log(   • prediction.pools: ?);\n      console.log(   • analytics.po...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'oracle.pool_bets');' does not exist in database",
      "query": ");\n        });\n        console.log('');\n      }\n\n    } catch (error) {\n      console.error('❌ Error ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'oracle.pools');' does not exist in database",
      "query": ");\n\n      // Then remove the pools\n      const poolsResult = await db.query('DELETE FROM oracle.pool...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'prediction.bets');' does not exist in database",
      "query": ");\n      console.log('   ✅ oracle.pools cleanup completed');\n\n    } catch (error) {\n      console.er...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'prediction.pools');' does not exist in database",
      "query": ");\n\n      // Then remove the pools\n      const poolsResult = await db.query('DELETE FROM prediction....",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'analytics.pools');' does not exist in database",
      "query": ");\n      console.log('   ✅ prediction.pools cleanup completed');\n\n    } catch (error) {\n      consol...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'oracle.pools');' does not exist in database",
      "query": ");\n      console.log('   ✅ analytics.pools cleanup completed');\n\n    } catch (error) {\n      console...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'prediction.pools');' does not exist in database",
      "query": ");\n      console.log('   ✅ analytics.pools cleanup completed');\n\n    } catch (error) {\n      console...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'analytics.pools');' does not exist in database",
      "query": ");\n      console.log('   ✅ analytics.pools cleanup completed');\n\n    } catch (error) {\n      console...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'oracle.pools');' does not exist in database",
      "query": ");\n      console.log(   • prediction.pools remaining: ?);\n      console.log(   • analytics.pools rem...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'prediction.pools');' does not exist in database",
      "query": ");\n      console.log(   • prediction.pools remaining: ?);\n      console.log(   • analytics.pools rem...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'analytics.pools');' does not exist in database",
      "query": ");\n      console.log(   • prediction.pools remaining: ?);\n      console.log(   • analytics.pools rem...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'prediction.bets');' does not exist in database",
      "query": ");\n      console.log(   • prediction.pools remaining: ?);\n      console.log(   • analytics.pools rem...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/cleanup-deprecated-pools.js",
      "line": 1,
      "message": "Table 'oracle.pool_bets');' does not exist in database",
      "query": ");\n      console.log(   • prediction.pools remaining: ?);\n      console.log(   • analytics.pools rem...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/configure-reputation-system.js",
      "line": 86,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT address, reputation \n      FROM core.users \n      WHERE reputation > 0 \n      ORDER BY reputa...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/configure-reputation-system.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": ");\n      } else {\n        console.log(✅ Indexer ? already authorized);\n      }\n    } catch (error) {...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/configure-reputation-system.js",
      "line": 94,
      "message": "Column 'rows' does not exist in table 'public.users'",
      "query": "📊 Found ? users with reputation to sync);\n      \n      const addresses = users.rows.map(user => use...",
      "suggestion": "Available columns: id, address, username, email, balance..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/configure-reputation-system.js",
      "line": 94,
      "message": "Column 'rows' does not exist in table 'public.users'",
      "query": "📊 Found ? users with reputation to sync);\n      \n      const addresses = users.rows.map(user => use...",
      "suggestion": "Available columns: id, address, username, email, balance..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/create-guided-market-entries.js",
      "line": 26,
      "message": "Table 'prediction.pools' does not exist in database",
      "query": "SELECT * FROM prediction.pools \n      WHERE oracle_type = 'GUIDED' OR oracle_type = 'OPEN'\n      ORD...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/create-guided-market-entries.js",
      "line": 151,
      "message": "Table 'prediction.pools' does not exist in database",
      "query": "UPDATE prediction.pools SET oracle_type = $1 WHERE pool_id = $2',\n            ['GUIDED', pool.pool_i...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/create-guided-market-entries.js",
      "line": 1,
      "message": "Table 'prediction.pools' does not exist in database",
      "query": "SELECT * FROM prediction.pools \n      WHERE oracle_type = 'GUIDED' OR oracle_type = 'OPEN'\n      ORD...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/create-guided-market-entries.js",
      "line": 32,
      "message": "Column 'length' does not exist in table 'oracle.pools'",
      "query": "📊 Found ? pools in database);\n    \n    if (pools.length === 0) {\n      console.log('No pools found ...",
      "suggestion": "Available columns: pool_id, creator_address, predicted_outcome, odds, creator_stake..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/create-guided-market-entries.js",
      "line": 1,
      "message": "Table 'prediction.pools' does not exist in database",
      "query": ");\n        \n        // Update the pool's oracle_type to GUIDED if it wasn't already\n        if (pool...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/create-guided-market-entries.js",
      "line": 1,
      "message": "Table 'oracle.football_prediction_markets');' does not exist in database",
      "query": ");\n        }\n        \n        processedCount++;\n        \n      } catch (error) {\n        console.err...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/create-guided-market-entries.js",
      "line": 1,
      "message": "Table 'prediction.pools' does not exist in database",
      "query": ");\n        }\n        \n        processedCount++;\n        \n      } catch (error) {\n        console.err...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/database-schema-audit.js",
      "line": 1,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT \n          table_schema,\n          table_name,\n          column_name,\n          data_type,\n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/database-schema-audit.js",
      "line": 1,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT \n          table_schema,\n          table_name,\n          column_name,\n          data_type,\n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/database-table-scanner.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT table_name \n        FROM information_schema.tables \n        WHERE table_schema = 'oracle' \n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/database-table-scanner.js",
      "line": 21,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "📊 Found ? unique table references in code);\n    console.log(📊 Found ? actual database tables);\n   ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/debug-pool-creation.js",
      "line": 33,
      "message": "Table 'oracle.pools');' does not exist in database",
      "query": "?. ? ?);\n      });\n      \n      // Test which contract is active\n      for (const address of contrac...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/deploy-reputation-system.js",
      "line": 92,
      "message": "Table 'config.js' does not exist in database",
      "query": "Update config.js with the contract address:'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/deploy-reputation-system.js",
      "line": 1,
      "message": "Table 'config.js' does not exist in database",
      "query": ");\n\n    console.log('\\n🎉 ReputationSystem deployment completed successfully!');\n    console.log('\\n...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/drop-duplicate-tables.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT FROM information_schema.tables \n          WHERE table_schema = $1 A...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/drop-duplicate-tables.js",
      "line": 1,
      "message": "Table 'information_schema.table_constraints' does not exist in database",
      "query": "SELECT \n          tc.constraint_name,\n          tc.table_name,\n          kcu.column_name,\n          ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/drop-duplicate-tables.js",
      "line": 1,
      "message": "Table 'information_schema.key_column_usage' does not exist in database",
      "query": "SELECT \n          tc.constraint_name,\n          tc.table_name,\n          kcu.column_name,\n          ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/drop-duplicate-tables.js",
      "line": 1,
      "message": "Table 'information_schema.constraint_column_usage' does not exist in database",
      "query": "SELECT \n          tc.constraint_name,\n          tc.table_name,\n          kcu.column_name,\n          ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/drop-duplicate-tables.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/drop-duplicate-tables.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "- ?);\n    });\n    console.log('');\n\n    try {\n      // Connect to database\n      await db.connect();...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/drop-duplicate-tables.js",
      "line": 90,
      "message": "Table 'information_schema.table_constraints' does not exist in database",
      "query": "⚠️  Table ? has ? rows - SKIPPING (not empty));\n        this.stats.errors.push({\n          table: ta...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/drop-duplicate-tables.js",
      "line": 90,
      "message": "Table 'information_schema.key_column_usage' does not exist in database",
      "query": "⚠️  Table ? has ? rows - SKIPPING (not empty));\n        this.stats.errors.push({\n          table: ta...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/drop-duplicate-tables.js",
      "line": 90,
      "message": "Table 'information_schema.constraint_column_usage' does not exist in database",
      "query": "⚠️  Table ? has ? rows - SKIPPING (not empty));\n        this.stats.errors.push({\n          table: ta...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/final-system-sync-test.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/final-system-sync-test.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/fix-oddyssey-integration.js",
      "line": 178,
      "message": "Table 'analytics.daily_stats' does not exist in database",
      "query": "INSERT INTO analytics.daily_stats (date, total_volume, total_pools, total_bets, total_users, active_...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/handle-foreign-key-constraints.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT FROM information_schema.tables \n          WHERE table_schema = $1 A...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/handle-foreign-key-constraints.js",
      "line": 1,
      "message": "Table 'information_schema.table_constraints' does not exist in database",
      "query": "SELECT \n          tc.constraint_name,\n          tc.table_name,\n          kcu.column_name,\n          ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/handle-foreign-key-constraints.js",
      "line": 1,
      "message": "Table 'information_schema.key_column_usage' does not exist in database",
      "query": "SELECT \n          tc.constraint_name,\n          tc.table_name,\n          kcu.column_name,\n          ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/handle-foreign-key-constraints.js",
      "line": 1,
      "message": "Table 'information_schema.constraint_column_usage' does not exist in database",
      "query": "SELECT \n          tc.constraint_name,\n          tc.table_name,\n          kcu.column_name,\n          ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/handle-foreign-key-constraints.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/handle-foreign-key-constraints.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "- ?);\n    });\n    console.log('');\n\n    try {\n      // Connect to database\n      await db.connect();...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/handle-foreign-key-constraints.js",
      "line": 76,
      "message": "Table 'information_schema.table_constraints' does not exist in database",
      "query": "ℹ️  Table ? does not exist, skipping);\n        return;\n      }\n\n      // Get foreign key constraints...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/handle-foreign-key-constraints.js",
      "line": 76,
      "message": "Table 'information_schema.key_column_usage' does not exist in database",
      "query": "ℹ️  Table ? does not exist, skipping);\n        return;\n      }\n\n      // Get foreign key constraints...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/handle-foreign-key-constraints.js",
      "line": 76,
      "message": "Table 'information_schema.constraint_column_usage' does not exist in database",
      "query": "ℹ️  Table ? does not exist, skipping);\n        return;\n      }\n\n      // Get foreign key constraints...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/init-database.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/init-database.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 347,
      "message": "Table 'system.health_checks' does not exist in database",
      "query": "INSERT INTO system.health_checks \r\n        (timestamp, overall_status, check_duration, services_data...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 361,
      "message": "Table 'system.health_checks' does not exist in database",
      "query": "DELETE FROM system.health_checks \r\n        WHERE id NOT IN (\r\n          SELECT id FROM system.health...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 394,
      "message": "Table 'system.performance_metrics' does not exist in database",
      "query": "INSERT INTO system.performance_metrics \r\n          (timestamp, metric_name, metric_value, metric_uni...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 402,
      "message": "Table 'system.performance_metrics' does not exist in database",
      "query": "DELETE FROM system.performance_metrics \r\n        WHERE id NOT IN (\r\n          SELECT id FROM system....",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 361,
      "message": "Table 'system.health_checks' does not exist in database",
      "query": "DELETE FROM system.health_checks \r\n        WHERE created_at < $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 402,
      "message": "Table 'system.performance_metrics' does not exist in database",
      "query": "DELETE FROM system.performance_metrics \r\n        WHERE created_at < $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 1,
      "message": "Table 'system.health_checks' does not exist in database",
      "query": "CREATE TABLE IF NOT EXISTS system.health_checks (\r\n          id SERIAL PRIMARY KEY,\r\n          times...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 1,
      "message": "Table 'system.health_checks' does not exist in database",
      "query": "DELETE FROM system.health_checks \r\n        WHERE id NOT IN (\r\n          SELECT id FROM system.health...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 1,
      "message": "Table 'system.performance_metrics' does not exist in database",
      "query": "INSERT INTO system.performance_metrics \r\n          (timestamp, metric_name, metric_value, metric_uni...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 1,
      "message": "Table 'system.performance_metrics' does not exist in database",
      "query": "DELETE FROM system.performance_metrics \r\n        WHERE id NOT IN (\r\n          SELECT id FROM system....",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 1,
      "message": "Table 'system.health_checks' does not exist in database",
      "query": "DELETE FROM system.health_checks \r\n        WHERE created_at < $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-health-monitoring.js",
      "line": 1,
      "message": "Table 'system.performance_metrics' does not exist in database",
      "query": "DELETE FROM system.performance_metrics \r\n        WHERE created_at < $1...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 41,
      "message": "Table 'oracle.current_oddyssey_cycle'' does not exist in database",
      "query": "DELETE FROM oracle.current_oddyssey_cycle'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 44,
      "message": "Table 'oracle.oddyssey_cycles'' does not exist in database",
      "query": "DELETE FROM oracle.oddyssey_cycles'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 44,
      "message": "Table 'oracle.oddyssey_slips'' does not exist in database",
      "query": "DELETE FROM oracle.oddyssey_slips'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-new-oddyssey-contract.js",
      "line": 82,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "Expected 10 matches, got ?);\n      }\n      \n      console.log(✅ Found ? matches for today:);\n      r...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-oddyssey-cycle.js",
      "line": 41,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": "Current Cycle ID: ?);\n      \n      // Try to get matches for current cycle\n      try {\n        const...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-oddyssey-cycle.js",
      "line": 41,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": "Current Cycle ID: ?);\n      \n      // Try to get matches for current cycle\n      try {\n        const...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-oddyssey-cycle.js",
      "line": 1,
      "message": "Column 'oddysseyMatches' does not exist in table 'oracle.matches'",
      "query": ");\n      });\n      \n      return selection;\n      \n    } catch (error) {\n      console.error('❌ Erro...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/initialize-oddyssey-cycle.js",
      "line": 1,
      "message": "Column 'oddysseyMatches' does not exist in table 'public.matches'",
      "query": ");\n      });\n      \n      return selection;\n      \n    } catch (error) {\n      console.error('❌ Erro...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/sync-current-cycle.js",
      "line": 23,
      "message": "Table 'oracle.current_oddyssey_cycle'' does not exist in database",
      "query": "SELECT cycle_id FROM oracle.current_oddyssey_cycle'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/sync-current-cycle.js",
      "line": 48,
      "message": "Table 'oracle.current_oddyssey_cycle'' does not exist in database",
      "query": "DELETE FROM oracle.current_oddyssey_cycle'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/sync-current-cycle.js",
      "line": 1,
      "message": "Table 'oracle.current_oddyssey_cycle'' does not exist in database",
      "query": "update\n    const verifyResult = await db.query('SELECT cycle_id FROM oracle.current_oddyssey_cycle'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/sync-current-cycle.js",
      "line": 20,
      "message": "Table 'oracle.current_oddyssey_cycle');' does not exist in database",
      "query": "📊 Contract current cycle ID: ?);\n    \n    // Check what's currently in the database\n    const curre...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/sync-current-cycle.js",
      "line": 1,
      "message": "Table 'oracle.current_oddyssey_cycle');' does not exist in database",
      "query": ");\n    \n    await db.query('DELETE FROM oracle.current_oddyssey_cycle');\n    \n    const updateQuery ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/sync-current-cycle.js",
      "line": 1,
      "message": "Table 'oracle.current_oddyssey_cycle');' does not exist in database",
      "query": ");\n    \n    // Verify the update\n    const verifyResult = await db.query('SELECT cycle_id FROM oracl...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/sync-frontend-contract-addresses.js",
      "line": 1,
      "message": "Table 'console.log('\\n🎯' does not exist in database",
      "query": "update\n  console.log('\\n🎯 CRITICAL UPDATE:'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-cycle-creation.js",
      "line": 17,
      "message": "Column 'length' does not exist in table 'oracle.matches'",
      "query": "✅ Found ? matches for today);\n    \n    if (matches.length === 0) {\n      console.log('⚠️ No matches ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-cycle-creation.js",
      "line": 17,
      "message": "Column 'length' does not exist in table 'public.matches'",
      "query": "✅ Found ? matches for today);\n    \n    if (matches.length === 0) {\n      console.log('⚠️ No matches ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-cycle-creation.js",
      "line": 17,
      "message": "Column 'forEach' does not exist in table 'oracle.matches'",
      "query": "✅ Found ? matches for today);\n    \n    if (matches.length === 0) {\n      console.log('⚠️ No matches ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-cycle-creation.js",
      "line": 17,
      "message": "Column 'forEach' does not exist in table 'public.matches'",
      "query": "✅ Found ? matches for today);\n    \n    if (matches.length === 0) {\n      console.log('⚠️ No matches ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-cycle-creation.js",
      "line": 68,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "✅ Current cycle in database:);\n      console.log(   Cycle ID: ?);\n      console.log(   Created: ?);\n...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-cycle-creation.js",
      "line": 68,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "✅ Current cycle in database:);\n      console.log(   Cycle ID: ?);\n      console.log(   Created: ?);\n...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement-wagmi-pattern.js",
      "line": 96,
      "message": "Column 'forEach' does not exist in table 'oracle.matches'",
      "query": "0x?\n      );\n      \n      this.walletClient = createWalletClient({\n        account: this.account,\n  ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement-wagmi-pattern.js",
      "line": 96,
      "message": "Column 'forEach' does not exist in table 'public.matches'",
      "query": "0x?\n      );\n      \n      this.walletClient = createWalletClient({\n        account: this.account,\n  ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement-wagmi-pattern.js",
      "line": 96,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "0x?\n      );\n      \n      this.walletClient = createWalletClient({\n        account: this.account,\n  ...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement-wagmi-pattern.js",
      "line": 96,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "0x?\n      );\n      \n      this.walletClient = createWalletClient({\n        account: this.account,\n  ...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement-wagmi-pattern.js",
      "line": 1,
      "message": "Column 'forEach' does not exist in table 'public.predictions'",
      "query": ");\n    predictions.forEach((pred, index) => {\n      const betTypeName = pred.betType === BetType.MON...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement-wagmi-pattern.js",
      "line": 1,
      "message": "Column 'map' does not exist in table 'public.predictions'",
      "query": ");\n        isValid = false;\n      }\n    }\n    \n    if (!isValid) {\n      console.log('❌ Prediction v...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement.js",
      "line": 85,
      "message": "Column 'forEach' does not exist in table 'oracle.matches'",
      "query": "0x?);\n    const walletClient = createWalletClient({\n      account,\n      chain: {\n        id: 50312,...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement.js",
      "line": 85,
      "message": "Column 'forEach' does not exist in table 'public.matches'",
      "query": "0x?);\n    const walletClient = createWalletClient({\n      account,\n      chain: {\n        id: 50312,...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement.js",
      "line": 85,
      "message": "Column 'map' does not exist in table 'oracle.matches'",
      "query": "0x?);\n    const walletClient = createWalletClient({\n      account,\n      chain: {\n        id: 50312,...",
      "suggestion": "Available columns: match_id, home_team, away_team, match_time, league..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement.js",
      "line": 85,
      "message": "Column 'map' does not exist in table 'public.matches'",
      "query": "0x?);\n    const walletClient = createWalletClient({\n      account,\n      chain: {\n        id: 50312,...",
      "suggestion": "Available columns: id, match_id, home_team, away_team, home_score..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement.js",
      "line": 1,
      "message": "Column 'forEach' does not exist in table 'public.predictions'",
      "query": ");\n    predictions.forEach((pred, index) => {\n      const betTypeName = pred.betType === BetType.MON...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_COLUMN",
      "severity": "ERROR",
      "file": "scripts/test-oddyssey-slip-placement.js",
      "line": 1,
      "message": "Column 'map' does not exist in table 'public.predictions'",
      "query": ");\n        isValid = false;\n      }\n    }\n    \n    if (!isValid) {\n      console.log('❌ Prediction v...",
      "suggestion": "Available columns: id, match_id, user_address, prediction_type, prediction_value..."
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync-simple.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync-simple.js",
      "line": 106,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT column_name, data_type\n          FROM information_schema.columns \n          WHERE table_schem...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync-simple.js",
      "line": 208,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT table_schema, table_name \n        FROM information_schema.tables \n        WHERE table_schema ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync-simple.js",
      "line": 1,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT column_name \n        FROM information_schema.columns \n        WHERE table_schema = 'oracle' \n...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync-simple.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync-simple.js",
      "line": 99,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "Table ? does not exist);\n          console.log(   ❌ ?: Missing);\n          continue;\n        }\n\n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync-simple.js",
      "line": 189,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "✅ Total slips: ?);\n\n    } catch (error) {\n      this.results.api.issues.push(API query error: ?);\n  ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync-simple.js",
      "line": 221,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "?.?);\n      const missingTables = expectedTables.filter(table => !existingTables.includes(table));\n\n...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 184,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT column_name, data_type, is_nullable\n          FROM information_schema.columns \n          WHER...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 414,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT table_schema, table_name \n        FROM information_schema.tables \n        WHERE table_schema ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 1,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT column_name \n        FROM information_schema.columns \n        WHERE table_schema = 'oracle' \n...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 177,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "Table ? does not exist);\n          console.log(   ❌ ?: Missing);\n          continue;\n        }\n\n    ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 177,
      "message": "Table 'oracle.oddyssey_cycles)' does not exist in database",
      "query": "Table ? missing columns: ?\n          );\n          console.log(   ⚠️  ?: Missing columns: ?);\n       ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 271,
      "message": "Table 'oracle.oddyssey_cycles)' does not exist in database",
      "query": "✅ Current cycle query: ? (? matches));\n        \n        // Validate data types\n        if (typeof cy...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 390,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "Invalid odds type: ?);\n          console.log(   ⚠️  Odds type: ?);\n        } else {\n          consol...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/test-system-sync.js",
      "line": 427,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "?.?);\n      const missingTables = expectedTables.filter(table => !existingTables.includes(table));\n\n...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/verify-schema-cleanup.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/verify-schema-cleanup.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/verify-schema-cleanup.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n            SELECT FROM information_schema.tables \n            WHERE table_schema = ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/verify-schema-cleanup.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": ");\n        }\n      }\n    }\n\n    this.results.codeReferences.details = results;\n    // Manual overrid...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/verify-schema-cleanup.js",
      "line": 148,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "?: ?);\n      } catch (error) {\n        results[tableName] = {\n          exists: false,\n          sta...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "scripts/verify-schema-cleanup.js",
      "line": 148,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "?: ?);\n      } catch (error) {\n        results[tableName] = {\n          exists: false,\n          sta...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/analytics-setup.js",
      "line": 131,
      "message": "Table 'analytics.daily_stats' does not exist in database",
      "query": "INSERT INTO analytics.daily_stats (date, total_volume, total_pools, total_bets, total_users, active_...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/analytics-setup.js",
      "line": 131,
      "message": "Table 'analytics.category_stats' does not exist in database",
      "query": "INSERT INTO analytics.category_stats (date, category, total_pools, total_volume, avg_odds, win_rate...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/analytics-setup.js",
      "line": 131,
      "message": "Table 'analytics.pools' does not exist in database",
      "query": "INSERT INTO analytics.pools (pool_id, creator_address, odds, is_settled, creator_side_won, is_privat...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/analytics-setup.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT FROM information_schema.tables \n          WHERE table_schema || '.'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 120,
      "message": "Table 'core.users' does not exist in database",
      "query": "INSERT INTO core.users (address...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 130,
      "message": "Table 'core.users' does not exist in database",
      "query": "SELECT * FROM core.users WHERE address = $1'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 138,
      "message": "Table 'core.reputation_actions' does not exist in database",
      "query": "INSERT INTO core.reputation_actions (user_address, action, points, ref_type, ref_id...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 226,
      "message": "Table 'oddyssey.daily_games' does not exist in database",
      "query": "INSERT INTO oddyssey.daily_games (game_date, entry_fee...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 226,
      "message": "Table 'oddyssey.slips' does not exist in database",
      "query": "INSERT INTO oddyssey.slips (user_address, game_date, total_odds...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 226,
      "message": "Table 'oddyssey.slip_entries' does not exist in database",
      "query": "INSERT INTO oddyssey.slip_entries (\n            slip_id, match_id, bet_type, selected_outcome, selec...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 1,
      "message": "Table 'core.users' does not exist in database",
      "query": "INSERT INTO core.users (address)\n      VALUES ($1)\n      ON CONFLICT (address) DO UPDATE SET last_ac...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 1,
      "message": "Table 'core.reputation_actions' does not exist in database",
      "query": "INSERT INTO core.reputation_actions (user_address, action, points, ref_type, ref_id)\n      VALUES ($...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 1,
      "message": "Table 'core.reputation_actions' does not exist in database",
      "query": "SELECT COALESCE(SUM(points), 0) as total_reputation\n      FROM core.reputation_actions\n      WHERE u...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 1,
      "message": "Table 'oddyssey.daily_games' does not exist in database",
      "query": "INSERT INTO oddyssey.daily_games (game_date, entry_fee)\n      VALUES ($1, $2)\n      ON CONFLICT (gam...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 1,
      "message": "Table 'oddyssey.slips' does not exist in database",
      "query": "INSERT INTO oddyssey.slips (user_address, game_date, total_odds)\n        VALUES ($1, $2, $3)\n       ...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 1,
      "message": "Table 'oddyssey.slip_entries' does not exist in database",
      "query": "INSERT INTO oddyssey.slip_entries (\n            slip_id, match_id, bet_type, selected_outcome, selec...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 1,
      "message": "Table 'oddyssey.daily_games' does not exist in database",
      "query": "SELECT \n        COUNT(s.slip_id) as total_slips,\n        COUNT(DISTINCT s.user_address) as unique_pl...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 1,
      "message": "Table 'oddyssey.slips' does not exist in database",
      "query": "SELECT \n        COUNT(s.slip_id) as total_slips,\n        COUNT(DISTINCT s.user_address) as unique_pl...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/db.js",
      "line": 1,
      "message": "Table 'oddyssey.slips' does not exist in database",
      "query": "SELECT \n        user_address,\n        COUNT(slip_id) as total_slips,\n        SUM(final_score) as tot...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/initialize-missing-tables.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT FROM information_schema.tables \n          WHERE table_schema = $1 A...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/initialize-missing-tables.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n        SELECT FROM information_schema.tables \n        WHERE table_schema = 'core' A...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/initialize-missing-tables.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n        SELECT FROM information_schema.tables \n        WHERE table_schema = 'analyti...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/initialize-missing-tables.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n          SELECT FROM information_schema.tables \n          WHERE table_schema = $1 A...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/initialize-missing-tables.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n        SELECT FROM information_schema.tables \n        WHERE table_schema = 'core' A...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/initialize-missing-tables.js",
      "line": 1,
      "message": "Table 'information_schema.tables' does not exist in database",
      "query": "SELECT EXISTS (\n        SELECT FROM information_schema.tables \n        WHERE table_schema = 'analyti...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/oddyssey-setup.js",
      "line": 217,
      "message": "Table 'information_schema.table_constraints' does not exist in database",
      "query": "SELECT 1 FROM information_schema.table_constraints WHERE constraint_name = 'unique_fixture_cycle'...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/oddyssey-setup.js",
      "line": 1,
      "message": "Table 'information_schema.table_constraints' does not exist in database",
      "query": ");\n      }\n    }\n  }\n\n  async applyMissingColumns() {\n    console.log('🔧 Applying missing columns.....",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 75,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT 1 FROM information_schema.columns WHERE table_schema = 'oracle' AND table_name = 'fixture_res...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 75,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT 1 FROM information_schema.columns WHERE table_schema = 'oracle' AND table_name = 'fixture_res...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 75,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT 1 FROM information_schema.columns WHERE table_schema = 'oracle' AND table_name = 'fixture_res...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 75,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT 1 FROM information_schema.columns WHERE table_schema = 'oddyssey' AND table_name = 'daily_gam...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 75,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT 1 FROM information_schema.columns WHERE table_schema = 'oddyssey' AND table_name = 'daily_gam...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 75,
      "message": "Table 'information_schema.constraint_column_usage' does not exist in database",
      "query": "SELECT 1 FROM information_schema.constraint_column_usage WHERE constraint_name = 'unique_fixture_cyc...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 75,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "SELECT 1 FROM information_schema.columns WHERE table_schema = 'oracle' AND table_name = 'oddyssey_cy...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 27,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "📋 Applying schema: ?);\n          const schemaSQL = fs.readFileSync(schemaPath, 'utf8');\n          \n...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 1,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "DO $$ \n      BEGIN \n        IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_sche...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 1,
      "message": "Table 'information_schema.constraint_column_usage' does not exist in database",
      "query": "DO $$ \n      BEGIN \n        IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_sche...",
      "suggestion": "Check table name spelling or create the table"
    },
    {
      "type": "MISSING_TABLE",
      "severity": "ERROR",
      "file": "db/setup.js",
      "line": 1,
      "message": "Table 'information_schema.columns' does not exist in database",
      "query": "DO $$ \n      BEGIN \n        IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_sche...",
      "suggestion": "Check table name spelling or create the table"
    }
  ],
  "warnings": [
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/crypto.js",
      "line": 1,
      "message": "No index found on 'oracle.crypto_coins.is_popular' - consider adding index for better performance",
      "query": "SELECT \n        cc.coinpaprika_id as id,\n        cc.symbol,\n        cc.name,\n        cc.rank,\n      ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/crypto.js",
      "line": 1,
      "message": "No index found on 'oracle.crypto_coins.is_active' - consider adding index for better performance",
      "query": "SELECT \n        cc.coinpaprika_id as id,\n        cc.symbol,\n        cc.name,\n        cc.rank,\n      ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 1,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "SELECT \n        f.id as fixture_id,\n        f.home_team,\n        f.away_team,\n        f.home_team_id..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 1,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "SELECT \n        f.id as fixture_id,\n        f.home_team,\n        f.away_team,\n        f.match_date,\n..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 27,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "?-?-?;\n    };\n    const startDateStr = formatDate(today);\n    const endDateStr = formatDate(endDate)..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 182,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "AND f.league_id = $?;\n      params.push(league);\n      paramIndex++;\n    }\n\n    query +=  ORDER BY f..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 182,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "AND f.league_id = $?;\n      countParams.push(league);\n    }\n\n    const countResult = await db.query(..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 182,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "AND f.league_id = $?;\n      params.push(league);\n      paramIndex++;\n    }\n\n    query +=  ORDER BY f..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 1,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": ", row.odds_data);\n          return null;\n        }\n      })() : null\n    })));\n\n    res.json({\n     ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 1,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "SELECT \n        f.id as fixture_id,\n        f.home_team,\n        f.away_team,\n        f.league_name,..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 182,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "AND f.league_id = $?;\n      params.push(league);\n      paramIndex++;\n    }\n\n    query +=  ORDER BY f..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "api/fixtures.js",
      "line": 497,
      "message": "No index found on 'oracle.leagues.is_popular' - consider adding index for better performance",
      "query": "⚠️ Invalid odds JSON for fixture ?:, fixture.odds_data);\n            return null;\n          }\n      ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "services/football-oracle-bot.js",
      "line": 120,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "SELECT f.id as fixture_id, f.home_team, f.away_team, f.match_date\n        FROM oracle.fixtures f\n   ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "services/football-oracle-bot.js",
      "line": 1,
      "message": "No index found on 'oracle.football_prediction_markets.resolved' - consider adding index for better performance",
      "query": "SELECT \n          fpm.id,\n          fpm.market_id,\n          fpm.fixture_id,\n          fpm.outcome_t..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "services/football-oracle-bot.js",
      "line": 1,
      "message": "No index found on 'oracle.football_prediction_markets.resolved' - consider adding index for better performance",
      "query": "SELECT \n          fpm.id,\n          fpm.market_id,\n          fpm.fixture_id,\n          fpm.outcome_t..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "services/oddyssey-manager.js",
      "line": 115,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "Expected ? matches, found ? for ?);\n      }\n\n      // Convert database matches to contract format\n  ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "services/persistent-daily-game-manager.js",
      "line": 1,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": ", [targetDate]);\r\n\r\n      const count = parseInt(result.rows[0].count);\r\n      const isValid = count..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "services/sportmonks.js",
      "line": 1056,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "SELECT f.id, f.home_team, f.away_team, f.match_date, f.status\n        FROM oracle.fixtures f\n       ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "services/unified-results-manager.js",
      "line": 113,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "SELECT f.id, f.home_team, f.away_team, f.match_date, f.status\n        FROM oracle.fixtures f\n       ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "services/unified-results-manager.js",
      "line": 1,
      "message": "No index found on 'oracle.fixtures.match_date >' - consider adding index for better performance",
      "query": "SELECT f.id, f.home_team, f.away_team, f.match_date, f.status\n        FROM oracle.fixtures f\n       ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "cron/football-scheduler.js",
      "line": 269,
      "message": "No index found on 'oracle.football_prediction_markets.resolved' - consider adding index for better performance",
      "query": "⚠️ Found ? stuck football markets past resolution time);\n      }\n\n      // Check for markets without..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "scripts/system-status-report.js",
      "line": 112,
      "message": "No index found on 'oracle.football_prediction_markets.resolved' - consider adding index for better performance",
      "query": "📊 Oddyssey Cycles: ? total, ? resolved);\n      \n    } catch (error) {\n      console.log(❌ Database ..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "scripts/test-football-oracle-bot-integration.js",
      "line": 1,
      "message": "No index found on 'oracle.football_prediction_markets.resolved' - consider adding index for better performance",
      "query": "SELECT \n          fpm.id,\n          fpm.market_id,\n          fpm.fixture_id,\n          fpm.outcome_t..."
    },
    {
      "type": "PERFORMANCE",
      "severity": "WARNING",
      "file": "scripts/test-football-oracle-bot-integration.js",
      "line": 24,
      "message": "No index found on 'oracle.football_prediction_markets.resolved' - consider adding index for better performance",
      "query": "✅ Unified Results: ?);\n      if (unifiedResult.status === 'success') {\n        console.log(📊 Fetche..."
    }
  ],
  "schema": {
    "oracle.active_crypto_markets": {
      "columns": [
        "market_id",
        "coinpaprika_id",
        "target_price",
        "direction",
        "timeframe",
        "start_price",
        "start_time",
        "end_time",
        "resolved",
        "created_at"
      ],
      "indexes": [
        "active_crypto_markets_pkey",
        "idx_active_crypto_markets_resolved"
      ]
    },
    "oracle.analytics_crypto_daily": {
      "columns": [
        "id",
        "date",
        "total_markets",
        "resolved_markets",
        "active_markets",
        "total_volume",
        "avg_volume",
        "unique_coins",
        "price_snapshots",
        "tracked_coins",
        "avg_price",
        "max_price",
        "min_price",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "analytics_crypto_daily_pkey",
        "analytics_crypto_daily_date_key"
      ]
    },
    "oracle.analytics_football_daily": {
      "columns": [
        "id",
        "date",
        "total_fixtures",
        "completed_matches",
        "upcoming_matches",
        "live_matches",
        "unique_leagues",
        "unique_teams",
        "total_markets",
        "resolved_markets",
        "active_markets",
        "total_volume",
        "avg_volume",
        "total_odds",
        "fixtures_with_odds",
        "unique_markets",
        "avg_odds",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "analytics_football_daily_pkey",
        "analytics_football_daily_date_key"
      ]
    },
    "oracle.analytics_odyssey_daily": {
      "columns": [
        "id",
        "date",
        "total_cycles",
        "resolved_cycles",
        "active_cycles",
        "total_prize_pools",
        "avg_prize_pool",
        "total_slips",
        "unique_players",
        "avg_correct_predictions",
        "max_correct_predictions",
        "evaluated_slips",
        "claimed_prizes",
        "active_users",
        "avg_accuracy",
        "best_accuracy",
        "total_claims",
        "total_prizes_claimed",
        "avg_prize_amount",
        "unique_winners",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "analytics_odyssey_daily_pkey",
        "analytics_odyssey_daily_date_key"
      ]
    },
    "oracle.analytics_platform_overview": {
      "columns": [
        "id",
        "overview_data",
        "growth_data",
        "timestamp",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "analytics_platform_overview_pkey"
      ]
    },
    "oracle.analytics_pools": {
      "columns": [
        "id",
        "pool_id",
        "creator_address",
        "event_start_time",
        "event_end_time",
        "oracle_type",
        "market_id",
        "creation_time",
        "is_settled",
        "creator_side_won",
        "actual_result",
        "settled_at",
        "total_bettor_stake",
        "participant_count",
        "category",
        "total_volume",
        "fill_percentage",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "analytics_pools_pkey",
        "analytics_pools_pool_id_key"
      ]
    },
    "oracle.analytics_user_activity_daily": {
      "columns": [
        "id",
        "date",
        "active_users",
        "total_actions",
        "evaluated_slips",
        "users_with_stats",
        "avg_accuracy",
        "best_accuracy",
        "total_slips_placed",
        "total_correct_predictions",
        "new_users",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "analytics_user_activity_daily_pkey",
        "analytics_user_activity_daily_date_key"
      ]
    },
    "oracle.blockchain_events": {
      "columns": [
        "id",
        "block_number",
        "transaction_hash",
        "log_index",
        "event_type",
        "contract_address",
        "event_data",
        "processed_at",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "blockchain_events_pkey",
        "idx_blockchain_events_block_number",
        "idx_blockchain_events_event_type",
        "idx_blockchain_events_contract_address",
        "idx_blockchain_events_transaction_hash",
        "idx_blockchain_events_unique"
      ]
    },
    "oracle.bookmakers": {
      "columns": [
        "id",
        "name",
        "logo_url",
        "website_url",
        "is_active",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "bookmakers_pkey",
        "idx_bookmakers_name",
        "idx_bookmakers_active"
      ]
    },
    "oracle.coins": {
      "columns": [
        "id",
        "symbol",
        "name",
        "price_usd",
        "market_cap_usd",
        "volume_24h_usd",
        "price_change_24h",
        "market_cap_rank",
        "coinpaprika_id",
        "logo_url",
        "whitepaper_url",
        "website_url",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "coins_pkey",
        "coins_symbol_key",
        "coins_coinpaprika_id_key",
        "idx_coins_symbol",
        "idx_coins_coinpaprika_id"
      ]
    },
    "oracle.combo_pools": {
      "columns": [
        "combo_pool_id",
        "creator_address",
        "creator_stake",
        "total_creator_side_stake",
        "max_bettor_stake",
        "total_bettor_stake",
        "total_odds",
        "settled",
        "creator_side_won",
        "uses_bitr",
        "event_start_time",
        "event_end_time",
        "betting_end_time",
        "result_timestamp",
        "category",
        "max_bet_per_user",
        "tx_hash",
        "block_number",
        "created_at",
        "settled_at"
      ],
      "indexes": [
        "combo_pools_pkey"
      ]
    },
    "oracle.comprehensive_slips": {
      "columns": [
        "slip_id",
        "cycle_id",
        "player_address",
        "creator_address",
        "pool_id",
        "transaction_hash",
        "category",
        "uses_bitr",
        "creator_stake",
        "odds",
        "notification_type",
        "message",
        "is_read",
        "created_at",
        "predictions",
        "final_score",
        "correct_count",
        "is_evaluated",
        "leaderboard_rank",
        "prize_claimed",
        "tx_hash",
        "cycle_resolved",
        "prize_pool",
        "resolved_at",
        "cycle_start_time",
        "cycle_end_time"
      ],
      "indexes": []
    },
    "oracle.countries": {
      "columns": [
        "id",
        "continent_id",
        "name",
        "official_name",
        "fifa_name",
        "iso2",
        "iso3",
        "latitude",
        "longitude",
        "image_path",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "countries_pkey",
        "idx_countries_name",
        "idx_countries_iso2"
      ]
    },
    "oracle.cron_job_logs": {
      "columns": [
        "id",
        "job_name",
        "success",
        "execution_time_ms",
        "error_message",
        "executed_at"
      ],
      "indexes": [
        "cron_job_logs_pkey"
      ]
    },
    "oracle.crypto_coins": {
      "columns": [
        "coinpaprika_id",
        "symbol",
        "name",
        "is_active",
        "is_popular",
        "rank",
        "logo_url",
        "whitepaper_url",
        "website_url",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "crypto_coins_pkey"
      ]
    },
    "oracle.crypto_market_stats": {
      "columns": [
        "id",
        "coinpaprika_id",
        "date",
        "avg_price",
        "min_price",
        "max_price",
        "volatility",
        "volume_24h",
        "market_cap",
        "price_movement_score",
        "created_at",
        "predictions_created",
        "predictions_resolved",
        "predictions_won"
      ],
      "indexes": [
        "crypto_market_stats_pkey",
        "crypto_market_stats_coinpaprika_id_date_key",
        "idx_crypto_market_stats_coin_date",
        "idx_crypto_market_stats_date"
      ]
    },
    "oracle.crypto_prediction_markets": {
      "columns": [
        "id",
        "market_id",
        "coinpaprika_id",
        "target_price",
        "direction",
        "timeframe",
        "start_price",
        "start_time",
        "end_time",
        "resolved",
        "final_price",
        "result",
        "resolved_at",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "crypto_prediction_markets_pkey",
        "crypto_prediction_markets_market_id_key",
        "idx_crypto_prediction_markets_coin",
        "idx_crypto_prediction_markets_resolved",
        "idx_crypto_prediction_markets_end_time"
      ]
    },
    "oracle.crypto_price_snapshots": {
      "columns": [
        "id",
        "coinpaprika_id",
        "price_usd",
        "market_cap",
        "volume_24h",
        "circulating_supply",
        "total_supply",
        "max_supply",
        "percent_change_1h",
        "percent_change_24h",
        "percent_change_7d",
        "ath_price",
        "ath_date",
        "beta_value",
        "last_updated",
        "created_at"
      ],
      "indexes": [
        "crypto_price_snapshots_pkey",
        "idx_crypto_price_snapshots_coin",
        "idx_crypto_price_snapshots_time",
        "idx_crypto_price_snapshots_coin_time"
      ]
    },
    "oracle.crypto_resolution_logs": {
      "columns": [
        "id",
        "market_id",
        "coinpaprika_id",
        "predicted_direction",
        "actual_result",
        "success",
        "error_message",
        "processing_time_ms",
        "created_at"
      ],
      "indexes": [
        "crypto_resolution_logs_pkey",
        "idx_crypto_resolution_logs_market",
        "idx_crypto_resolution_logs_time"
      ]
    },
    "oracle.current_oddyssey_cycle": {
      "columns": [
        "cycle_id",
        "created_at",
        "updated_at",
        "matches_count",
        "matches_data",
        "cycle_start_time",
        "cycle_end_time",
        "resolved_at",
        "is_resolved",
        "tx_hash",
        "resolution_tx_hash",
        "resolution_data",
        "ready_for_resolution",
        "resolution_prepared_at"
      ],
      "indexes": [
        "current_oddyssey_cycle_pkey"
      ]
    },
    "oracle.cycle_health_checks": {
      "columns": [
        "id",
        "timestamp",
        "status",
        "issues_count",
        "issues_data",
        "created_at"
      ],
      "indexes": [
        "cycle_health_checks_pkey"
      ]
    },
    "oracle.cycle_health_reports": {
      "columns": [
        "id",
        "timestamp",
        "status",
        "total_cycles",
        "missing_cycles",
        "anomalies_count",
        "report_data",
        "created_at"
      ],
      "indexes": [
        "cycle_health_reports_pkey"
      ]
    },
    "oracle.daily_game_matches": {
      "columns": [
        "id",
        "fixture_id",
        "home_team",
        "away_team",
        "league_name",
        "match_date",
        "game_date",
        "home_odds",
        "draw_odds",
        "away_odds",
        "over_25_odds",
        "under_25_odds",
        "selection_type",
        "priority_score",
        "cycle_id",
        "display_order",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "daily_game_matches_pkey",
        "idx_daily_game_matches_game_date",
        "unique_fixture_cycle",
        "idx_daily_game_matches_cycle_id"
      ]
    },
    "oracle.fixture_odds": {
      "columns": [
        "id",
        "fixture_id",
        "market_id",
        "bookmaker_id",
        "label",
        "value",
        "name",
        "sort_order",
        "market_description",
        "probability",
        "dp3",
        "fractional",
        "american",
        "winning",
        "stopped",
        "total",
        "handicap",
        "participants",
        "created_at",
        "original_label",
        "latest_bookmaker_update",
        "bookmaker",
        "bookmaker_name",
        "bookmaker_logo",
        "updated_at"
      ],
      "indexes": [
        "fixture_odds_pkey",
        "idx_fixture_odds_fixture_id",
        "idx_fixture_odds_market_id",
        "idx_fixture_odds_label"
      ]
    },
    "oracle.fixture_results": {
      "columns": [
        "id",
        "fixture_id",
        "home_score",
        "away_score",
        "ht_home_score",
        "ht_away_score",
        "result_1x2",
        "result_ou05",
        "result_ou15",
        "result_ou25",
        "result_ou35",
        "result_ou45",
        "result_btts",
        "result_ht",
        "result_ht_ou05",
        "result_ht_ou15",
        "result_ht_goals",
        "outcome_1x2",
        "final_price",
        "finished_at",
        "evaluation_status",
        "evaluation_timestamp",
        "evaluator",
        "confidence_score",
        "created_at",
        "updated_at",
        "outcome_ou05",
        "outcome_ou15",
        "outcome_ou25",
        "outcome_ou35",
        "outcome_ht_result",
        "outcome_btts",
        "full_score",
        "ht_score",
        "outcome_ou45"
      ],
      "indexes": [
        "fixture_results_pkey",
        "fixture_results_fixture_id_key"
      ]
    },
    "oracle.fixtures": {
      "columns": [
        "id",
        "name",
        "home_team_id",
        "away_team_id",
        "home_team",
        "away_team",
        "league_id",
        "league_name",
        "season_id",
        "round_id",
        "round",
        "match_date",
        "starting_at",
        "status",
        "venue",
        "referee",
        "league",
        "season",
        "stage",
        "round_obj",
        "state",
        "participants",
        "metadata",
        "referee_id",
        "referee_name",
        "referee_image_path",
        "venue_capacity",
        "venue_coordinates",
        "venue_surface",
        "venue_image_path",
        "home_team_image_path",
        "away_team_image_path",
        "league_image_path",
        "country_image_path",
        "created_at",
        "updated_at",
        "venue_id",
        "state_id",
        "result_info",
        "leg",
        "team_assignment_validated",
        "odds_mapping_validated",
        "processing_errors",
        "country",
        "country_code"
      ],
      "indexes": [
        "fixtures_pkey",
        "idx_fixtures_match_date",
        "idx_fixtures_league_id",
        "idx_fixtures_status"
      ]
    },
    "oracle.football_market_stats": {
      "columns": [
        "id",
        "outcome_type",
        "date",
        "total_markets",
        "resolved_markets",
        "home_wins",
        "draw_results",
        "away_wins",
        "over_results",
        "under_results",
        "btts_yes",
        "btts_no",
        "avg_resolution_time_ms",
        "created_at"
      ],
      "indexes": [
        "football_market_stats_pkey",
        "football_market_stats_outcome_type_date_key",
        "idx_football_market_stats_outcome_date",
        "idx_football_market_stats_date"
      ]
    },
    "oracle.football_prediction_markets": {
      "columns": [
        "id",
        "fixture_id",
        "market_type",
        "home_odds",
        "draw_odds",
        "away_odds",
        "ht_home_odds",
        "ht_draw_odds",
        "ht_away_odds",
        "over_05_odds",
        "under_05_odds",
        "over_15_odds",
        "under_15_odds",
        "over_25_odds",
        "under_25_odds",
        "over_35_odds",
        "under_35_odds",
        "over_45_odds",
        "under_45_odds",
        "ht_over_05_odds",
        "ht_under_05_odds",
        "ht_over_15_odds",
        "ht_under_15_odds",
        "btts_yes_odds",
        "btts_no_odds",
        "over_odds",
        "under_odds",
        "status",
        "created_at",
        "updated_at",
        "market_id",
        "outcome_type",
        "predicted_outcome",
        "end_time",
        "resolved",
        "result",
        "resolved_at",
        "pool_id"
      ],
      "indexes": [
        "football_prediction_markets_pkey",
        "football_prediction_markets_market_id_key"
      ]
    },
    "oracle.football_resolution_logs": {
      "columns": [
        "id",
        "market_id",
        "fixture_id",
        "outcome_type",
        "predicted_outcome",
        "actual_result",
        "success",
        "error_message",
        "processing_time_ms",
        "created_at"
      ],
      "indexes": [
        "football_resolution_logs_pkey",
        "idx_football_resolution_logs_market",
        "idx_football_resolution_logs_fixture",
        "idx_football_resolution_logs_time"
      ]
    },
    "oracle.leagues": {
      "columns": [
        "league_id",
        "name",
        "country",
        "country_code",
        "logo_url",
        "season_id",
        "is_popular",
        "image_path",
        "country_image_path",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "leagues_pkey"
      ]
    },
    "oracle.match_results": {
      "columns": [
        "id",
        "match_id",
        "home_score",
        "away_score",
        "ht_home_score",
        "ht_away_score",
        "result",
        "created_at",
        "updated_at",
        "outcome_1x2",
        "outcome_ou05",
        "outcome_ou15",
        "outcome_ou25",
        "outcome_ou35",
        "outcome_ht_result",
        "outcome_btts",
        "full_score",
        "ht_score",
        "state_id",
        "result_info",
        "finished_at",
        "resolved_at"
      ],
      "indexes": [
        "match_results_pkey",
        "match_results_match_id_unique"
      ]
    },
    "oracle.matches": {
      "columns": [
        "match_id",
        "home_team",
        "away_team",
        "match_time",
        "league",
        "status",
        "home_score",
        "away_score",
        "ht_home_score",
        "ht_away_score",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "matches_pkey",
        "idx_matches_match_time"
      ]
    },
    "oracle.oddyssey_cumulative_stats": {
      "columns": [
        "id",
        "user_address",
        "total_slips",
        "total_correct_predictions",
        "total_predictions",
        "overall_accuracy_percentage",
        "best_cycle_accuracy",
        "best_cycle_id",
        "total_prizes_won",
        "cycles_participated",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "oddyssey_cumulative_stats_pkey",
        "oddyssey_cumulative_stats_user_address_key"
      ]
    },
    "oracle.oddyssey_cycles": {
      "columns": [
        "cycle_id",
        "created_at",
        "updated_at",
        "matches_count",
        "matches_data",
        "cycle_start_time",
        "cycle_end_time",
        "is_resolved",
        "resolved_at",
        "tx_hash",
        "resolution_tx_hash",
        "resolution_data",
        "ready_for_resolution",
        "resolution_prepared_at",
        "start_time",
        "end_time",
        "prize_pool",
        "evaluation_completed",
        "evaluation_completed_at"
      ],
      "indexes": [
        "oddyssey_cycles_pkey",
        "idx_oddyssey_cycles_created_at",
        "idx_oddyssey_cycles_resolved"
      ]
    },
    "oracle.oddyssey_prize_claims": {
      "columns": [
        "id",
        "cycle_id",
        "player_address",
        "rank",
        "amount",
        "claimed_at",
        "tx_hash",
        "created_at"
      ],
      "indexes": [
        "oddyssey_prize_claims_pkey",
        "idx_oddyssey_prize_claims_cycle"
      ]
    },
    "oracle.oddyssey_prize_rollovers": {
      "columns": [
        "id",
        "from_cycle_id",
        "to_cycle_id",
        "amount",
        "created_at",
        "rollover_at",
        "tx_hash"
      ],
      "indexes": [
        "oddyssey_prize_rollovers_pkey",
        "oddyssey_prize_rollovers_from_cycle_id_to_cycle_id_key",
        "idx_oddyssey_prize_rollovers_from_cycle",
        "idx_oddyssey_prize_rollovers_to_cycle"
      ]
    },
    "oracle.oddyssey_slips": {
      "columns": [
        "slip_id",
        "cycle_id",
        "player_address",
        "placed_at",
        "predictions",
        "final_score",
        "correct_count",
        "is_evaluated",
        "leaderboard_rank",
        "prize_claimed",
        "tx_hash",
        "transaction_hash",
        "creator_address",
        "category",
        "uses_bitr",
        "creator_stake",
        "odds",
        "pool_id",
        "notification_type",
        "message",
        "is_read"
      ],
      "indexes": [
        "oddyssey_slips_pkey",
        "idx_oddyssey_slips_cycle_id",
        "idx_oddyssey_slips_player",
        "idx_oddyssey_slips_creator_address",
        "idx_oddyssey_slips_transaction_hash",
        "idx_oddyssey_slips_category",
        "idx_oddyssey_slips_created_at",
        "idx_oddyssey_slips_player_placed",
        "idx_oddyssey_slips_cycle_player",
        "idx_oddyssey_slips_evaluated"
      ]
    },
    "oracle.oddyssey_user_analytics": {
      "columns": [
        "id",
        "user_address",
        "cycle_id",
        "slips_count",
        "correct_predictions",
        "total_predictions",
        "accuracy_percentage",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "oddyssey_user_analytics_pkey",
        "oddyssey_user_analytics_user_address_cycle_id_key"
      ]
    },
    "oracle.oddyssey_user_preferences": {
      "columns": [
        "id",
        "user_address",
        "auto_evaluate",
        "auto_claim",
        "notifications",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "oddyssey_user_preferences_pkey",
        "oddyssey_user_preferences_user_address_key",
        "idx_oddyssey_user_preferences_user"
      ]
    },
    "oracle.oddyssey_user_stats": {
      "columns": [
        "id",
        "user_address",
        "total_slips",
        "total_wins",
        "best_score",
        "win_rate",
        "created_at",
        "updated_at",
        "current_streak",
        "best_streak",
        "last_active_cycle",
        "block_number",
        "transaction_hash"
      ],
      "indexes": [
        "oddyssey_user_stats_pkey",
        "oddyssey_user_stats_user_address_key",
        "idx_oddyssey_user_stats_user"
      ]
    },
    "oracle.pending_crypto_resolutions": {
      "columns": [
        "market_id",
        "coinpaprika_id",
        "target_price",
        "direction",
        "end_time",
        "current_price",
        "is_resolvable",
        "created_at"
      ],
      "indexes": [
        "pending_crypto_resolutions_pkey",
        "idx_pending_crypto_resolutions_end_time"
      ]
    },
    "oracle.pool_bets": {
      "columns": [
        "bet_id",
        "pool_id",
        "user_address",
        "amount",
        "tx_hash",
        "created_at"
      ],
      "indexes": [
        "pool_bets_pkey",
        "idx_pool_bets_pool_id",
        "idx_pool_bets_user",
        "idx_pool_bets_created_at"
      ]
    },
    "oracle.pool_claims": {
      "columns": [
        "id",
        "pool_id",
        "user_address",
        "amount",
        "claimed_at",
        "block_number",
        "transaction_hash"
      ],
      "indexes": [
        "pool_claims_pkey",
        "pool_claims_pool_id_user_address_key"
      ]
    },
    "oracle.pool_liquidity_providers": {
      "columns": [
        "id",
        "pool_id",
        "lp_address",
        "stake",
        "claimed",
        "created_at"
      ],
      "indexes": [
        "pool_liquidity_providers_pkey",
        "pool_liquidity_providers_pool_id_lp_address_key"
      ]
    },
    "oracle.pool_refunds": {
      "columns": [
        "id",
        "pool_id",
        "reason",
        "refunded_at",
        "block_number",
        "transaction_hash",
        "created_at"
      ],
      "indexes": [
        "pool_refunds_pkey",
        "idx_pool_refunds_pool_id"
      ]
    },
    "oracle.pools": {
      "columns": [
        "pool_id",
        "creator_address",
        "predicted_outcome",
        "odds",
        "creator_stake",
        "total_stake",
        "event_start_time",
        "event_end_time",
        "league",
        "category",
        "region",
        "is_private",
        "max_bet_per_user",
        "use_bitr",
        "oracle_type",
        "market_id",
        "status",
        "outcome",
        "tx_hash",
        "block_number",
        "settlement_tx_hash",
        "created_at",
        "settled_at",
        "updated_at",
        "total_creator_side_stake",
        "max_bettor_stake",
        "total_bettor_stake",
        "creator_side_won",
        "betting_end_time",
        "arbitration_deadline",
        "filled_above_60"
      ],
      "indexes": [
        "pools_pkey",
        "idx_pools_creator",
        "idx_pools_status",
        "idx_pools_created_at"
      ]
    },
    "oracle.referees": {
      "columns": [
        "id",
        "sport_id",
        "country_id",
        "city_id",
        "common_name",
        "firstname",
        "lastname",
        "name",
        "display_name",
        "image_path",
        "height",
        "weight",
        "date_of_birth",
        "gender",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "referees_pkey",
        "idx_referees_name",
        "idx_referees_country"
      ]
    },
    "oracle.results_fetching_logs": {
      "columns": [
        "id",
        "operation_type",
        "fixture_count",
        "success",
        "processing_time_ms",
        "error_message",
        "created_at"
      ],
      "indexes": [
        "results_fetching_logs_pkey"
      ]
    },
    "oracle.slip_evaluation_jobs": {
      "columns": [
        "id",
        "cycle_id",
        "status",
        "total_slips",
        "processed_slips",
        "failed_slips",
        "started_at",
        "completed_at",
        "error_message",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "slip_evaluation_jobs_pkey",
        "idx_slip_evaluation_jobs_cycle_id",
        "idx_slip_evaluation_jobs_status"
      ]
    },
    "oracle.system_alerts": {
      "columns": [
        "id",
        "health_check_id",
        "alert_type",
        "severity",
        "message",
        "resolved",
        "created_at",
        "resolved_at"
      ],
      "indexes": [
        "system_alerts_pkey"
      ]
    },
    "oracle.venues": {
      "columns": [
        "id",
        "country_id",
        "city_id",
        "name",
        "address",
        "city",
        "capacity",
        "image_path",
        "coordinates",
        "surface",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "venues_pkey",
        "idx_venues_name",
        "idx_venues_city",
        "idx_venues_capacity"
      ]
    },
    "public.betting_cycles": {
      "columns": [
        "id",
        "cycle_id",
        "start_time",
        "end_time",
        "status",
        "total_pool",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "betting_cycles_pkey",
        "betting_cycles_cycle_id_key",
        "idx_betting_cycles_cycle_id",
        "idx_betting_cycles_status"
      ]
    },
    "public.leagues": {
      "columns": [
        "id",
        "league_id",
        "name",
        "country",
        "logo",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "leagues_pkey",
        "leagues_league_id_key",
        "idx_leagues_league_id"
      ]
    },
    "public.matches": {
      "columns": [
        "id",
        "match_id",
        "home_team",
        "away_team",
        "home_score",
        "away_score",
        "status",
        "start_time",
        "end_time",
        "league_id",
        "league_name",
        "season_id",
        "season_name",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "matches_pkey",
        "matches_match_id_key",
        "idx_matches_match_id",
        "idx_matches_status",
        "idx_matches_start_time"
      ]
    },
    "public.oracle_submissions": {
      "columns": [
        "id",
        "match_id",
        "oracle_address",
        "outcome_data",
        "submitted_at",
        "created_at"
      ],
      "indexes": [
        "oracle_submissions_pkey",
        "idx_oracle_submissions_match_id"
      ]
    },
    "public.predictions": {
      "columns": [
        "id",
        "match_id",
        "user_address",
        "prediction_type",
        "prediction_value",
        "amount",
        "odds",
        "status",
        "created_at",
        "updated_at",
        "resolved_at"
      ],
      "indexes": [
        "predictions_pkey",
        "idx_predictions_match_id",
        "idx_predictions_user_address",
        "idx_predictions_status"
      ]
    },
    "public.seasons": {
      "columns": [
        "id",
        "season_id",
        "name",
        "league_id",
        "start_date",
        "end_date",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "seasons_pkey",
        "seasons_season_id_key",
        "idx_seasons_season_id",
        "idx_seasons_league_id"
      ]
    },
    "public.teams": {
      "columns": [
        "id",
        "team_id",
        "name",
        "short_name",
        "logo",
        "country",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "teams_pkey",
        "teams_team_id_key",
        "idx_teams_team_id"
      ]
    },
    "public.transactions": {
      "columns": [
        "id",
        "user_address",
        "transaction_hash",
        "type",
        "amount",
        "status",
        "block_number",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "transactions_pkey",
        "transactions_transaction_hash_key",
        "idx_transactions_user_address",
        "idx_transactions_hash"
      ]
    },
    "public.users": {
      "columns": [
        "id",
        "address",
        "username",
        "email",
        "balance",
        "total_bets",
        "total_wins",
        "total_losses",
        "created_at",
        "updated_at"
      ],
      "indexes": [
        "users_pkey",
        "users_address_key",
        "idx_users_address"
      ]
    }
  }
}